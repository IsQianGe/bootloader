ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32wlxx_hal_flash.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.FLASH_Program_Fast,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	FLASH_Program_Fast:
  24              	.LVL0:
  25              	.LFB734:
  26              		.file 1 "hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c"
   1:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
   2:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   ******************************************************************************
   3:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @file    stm32wlxx_hal_flash.c
   4:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @author  MCD Application Team
   5:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @brief   FLASH HAL module driver.
   6:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *          This file provides firmware functions to manage the following
   7:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *          functionalities of the internal FLASH memory:
   8:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *           + Program operations functions
   9:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *           + Memory Control functions
  10:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *           + Peripheral Errors functions
  11:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *
  12:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****  @verbatim
  13:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   ==============================================================================
  14:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****                         ##### FLASH peripheral features #####
  15:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   ==============================================================================
  16:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
  17:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   [..] The Flash memory interface manages CPU AHB I-Code and D-Code accesses
  18:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****        to the Flash memory. It implements the erase and program Flash memory operations
  19:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****        and the read and write protection mechanisms.
  20:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
  21:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   [..] The Flash memory interface accelerates code execution with a system of instruction
  22:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****        prefetch and cache lines.
  23:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
  24:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   [..] The FLASH main features are:
  25:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       (+) Flash memory read operations
  26:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       (+) Flash memory program/erase operations
  27:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       (+) Program and Erase suspension
  28:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       (+) Read / write protections (2 areas per features)
  29:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       (+) CPU2 Security area
  30:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       (+) Option bytes programming
  31:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       (+) Prefetch on CPU1 I-Code and CPU2 S-bus
  32:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       (+) 32 instruction cache lines of 4*64 bits on I-Code for CPU1
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 2


  33:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       (+) 8 data cache lines of 4*64 bits on D-Code for CPU1
  34:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       (+) 4 instruction cache lines of 1*64 bits on S-bus for CPU2
  35:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       (+) 4 data cache lines of 1*64 bits on S-Bus for CPU2
  36:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       (+) Error code correction (ECC) : Data in flash are 72-bits word
  37:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****           (8 bits added per double word)
  38:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
  39:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****                         ##### How to use this driver #####
  40:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****  ==============================================================================
  41:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     [..]
  42:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       This driver provides functions and macros to configure and program the FLASH
  43:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       memory of all STM32WLxx devices.
  44:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
  45:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       (#) Flash Memory IO Programming functions:
  46:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and
  47:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****                 HAL_FLASH_Lock() functions
  48:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****            (++) Program functions: double word and fast program (full row programming)
  49:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****            (++) There are two modes of programming:
  50:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****             (+++) Polling mode using HAL_FLASH_Program() function
  51:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****             (+++) Interrupt mode using HAL_FLASH_Program_IT() function
  52:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
  53:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       (#) Interrupts and flags management functions:
  54:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****            (++) Handle FLASH interrupts by calling HAL_FLASH_IRQHandler()
  55:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****            (++) Callback functions are called when the flash operations are finished :
  56:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****                 HAL_FLASH_EndOfOperationCallback() when everything is ok, otherwise
  57:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****                 HAL_FLASH_OperationErrorCallback()
  58:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****            (++) Get error flag status by calling HAL_GetError()
  59:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
  60:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       (#) Option bytes management functions :
  61:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****            (++) Lock and Unlock the option bytes using HAL_FLASH_OB_Unlock() and
  62:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****                 HAL_FLASH_OB_Lock() functions
  63:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****            (++) Launch the reload of the option bytes using HAL_FLASH_OB_Launch() function.
  64:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****                 In this case, a reset is generated
  65:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
  66:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     [..]
  67:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       In addition to these functions, this driver includes a set of macros allowing
  68:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       to handle the following operations:
  69:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****        (+) Set the latency
  70:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****        (+) Enable/Disable the prefetch buffer
  71:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****        (+) Enable/Disable the suspend program or erase request
  72:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****        (+) Enable/Disable the Instruction cache and the Data cache
  73:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****        (+) Reset the Instruction cache and the Data cache
  74:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****        (+) Enable/Disable the Flash interrupts
  75:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****        (+) Monitor the Flash flags status
  76:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
  77:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****  @endverbatim
  78:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   ******************************************************************************
  79:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @attention
  80:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *
  81:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  82:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * All rights reserved.</center></h2>
  83:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *
  84:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  85:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * the "License"; You may not use this file except in compliance with the
  86:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * License. You may obtain a copy of the License at:
  87:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *                       opensource.org/licenses/BSD-3-Clause
  88:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *
  89:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   ******************************************************************************
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 3


  90:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
  91:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
  92:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /* Includes ------------------------------------------------------------------*/
  93:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #include "stm32wlxx_hal.h"
  94:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
  95:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /** @addtogroup STM32WLxx_HAL_Driver
  96:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @{
  97:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
  98:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
  99:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH FLASH
 100:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @brief FLASH HAL module driver
 101:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @{
 102:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 103:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 104:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #ifdef HAL_FLASH_MODULE_ENABLED
 105:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 106:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /* Private typedef -----------------------------------------------------------*/
 107:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /* Private defines -----------------------------------------------------------*/
 108:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /** @addtogroup FLASH_Private_Constants
 109:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @{
 110:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 111:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #define FLASH_NB_DOUBLE_WORDS_IN_ROW  32
 112:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 113:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @}
 114:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 115:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 116:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /* Private macros ------------------------------------------------------------*/
 117:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /* Private variables ---------------------------------------------------------*/
 118:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH_Private_Variables FLASH Private Variables
 119:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****  * @{
 120:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****  */
 121:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 122:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Variable used for Program/Erase sectors under interruption
 123:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 124:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** FLASH_ProcessTypeDef pFlash = {.Lock = HAL_UNLOCKED, \
 125:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****                                .ErrorCode = HAL_FLASH_ERROR_NONE, \
 126:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****                                .ProcedureOnGoing = 0U, \
 127:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****                                .Address = 0U, \
 128:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****                                .Page = 0U, \
 129:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****                                .NbPagesToErase = 0U
 130:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****                               };
 131:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 132:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @}
 133:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 134:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 135:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /* Private function prototypes -----------------------------------------------*/
 136:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH_Private_Functions FLASH Private Functions
 137:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****  * @{
 138:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****  */
 139:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** static void          FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data);
 140:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** static void          FLASH_Program_Fast(uint32_t Address, uint32_t DataAddress);
 141:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 142:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @}
 143:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 144:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 145:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /* Exported functions --------------------------------------------------------*/
 146:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions FLASH Exported Functions
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 4


 147:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @{
 148:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 149:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 150:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group1 Programming operation functions
 151:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****  *  @brief   Programming operation functions
 152:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****  *
 153:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** @verbatim
 154:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****  ===============================================================================
 155:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****                   ##### Programming operation functions #####
 156:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****  ===============================================================================
 157:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     [..]
 158:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     This subsection provides a set of functions allowing to manage the FLASH
 159:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     program operations.
 160:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 161:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** @endverbatim
 162:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @{
 163:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 164:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 165:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 166:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Program double word or fast program of a row at a specified address.
 167:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @note   Before any operation, it is possible to check there is no operation suspended
 168:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *         by call HAL_FLASHEx_IsOperationSuspended()
 169:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @param  TypeProgram Indicate the way to program at a specified address
 170:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *                       This parameter can be a value of @ref FLASH_TYPE_PROGRAM
 171:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @param  Address Specifies the address to be programmed.
 172:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @param  Data Specifies the data to be programmed
 173:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *                This parameter is the data for the double word program and the address where
 174:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *                are stored the data for the row fast program.
 175:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *
 176:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 177:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 178:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 179:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** {
 180:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 181:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 182:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Check the parameters */
 183:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 184:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_ADDR_ALIGNED_64BITS(Address));
 185:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 186:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 187:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Process Locked */
 188:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 189:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 190:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Reset error code */
 191:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 192:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 193:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Verify that next operation can be proceed */
 194:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 195:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 196:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   if (status == HAL_OK)
 197:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 198:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_DOUBLEWORD)
 199:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 200:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       /* Check the parameters */
 201:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 202:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 203:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       /* Program double-word (64-bit) at a specified address */
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 5


 204:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       FLASH_Program_DoubleWord(Address, Data);
 205:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     }
 206:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     else
 207:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 208:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       /* Check the parameters */
 209:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       assert_param(IS_FLASH_FAST_PROGRAM_ADDRESS(Address));
 210:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 211:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       /* Fast program a 32 double-word (64-bit) row at a specified address */
 212:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       FLASH_Program_Fast(Address, (uint32_t)Data);
 213:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     }
 214:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 215:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* Wait for last operation to be completed */
 216:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 217:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 218:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* If the program operation is completed, disable the PG or FSTPG Bit */
 219:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #ifdef CORE_CM0PLUS
 220:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     CLEAR_BIT(FLASH->C2CR, TypeProgram);
 221:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #else
 222:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     CLEAR_BIT(FLASH->CR, TypeProgram);
 223:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #endif
 224:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 225:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 226:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Process Unlocked */
 227:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   __HAL_UNLOCK(&pFlash);
 228:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 229:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* return status */
 230:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   return status;
 231:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 232:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 233:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 234:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Program double word or fast program of a row at a specified address with interrupt enab
 235:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @note   Before any operation, it is possible to check there is no operation suspended
 236:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *         by call HAL_FLASHEx_IsOperationSuspended()
 237:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @param  TypeProgram Indicate the way to program at a specified address.
 238:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *                           This parameter can be a value of @ref FLASH_TYPE_PROGRAM
 239:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @param  Address Specifies the address to be programmed.
 240:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @param  Data Specifies the data to be programmed
 241:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *                This parameter is the data for the double word program and the address where
 242:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *                are stored the data for the row fast program.
 243:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *
 244:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL Status
 245:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 246:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program_IT(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 247:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** {
 248:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 249:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 250:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Check the parameters */
 251:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 252:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_ADDR_ALIGNED_64BITS(Address));
 253:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 254:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 255:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Process Locked */
 256:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 257:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 258:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Reset error code */
 259:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 260:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 6


 261:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Verify that next operation can be proceed */
 262:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 263:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 264:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   if (status != HAL_OK)
 265:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 266:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* Process Unlocked */
 267:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 268:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 269:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   else
 270:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 271:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* Set internal variables used by the IRQ handler */
 272:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     pFlash.ProcedureOnGoing = TypeProgram;
 273:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     pFlash.Address = Address;
 274:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 275:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* Enable End of Operation and Error interrupts */
 276:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP | FLASH_IT_OPERR | FLASH_IT_ECCC);
 277:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 278:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_DOUBLEWORD)
 279:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 280:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       /* Check the parameters */
 281:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 282:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 283:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       /* Program double-word (64-bit) at a specified address */
 284:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       FLASH_Program_DoubleWord(Address, Data);
 285:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     }
 286:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     else
 287:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 288:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       /* Check the parameters */
 289:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       assert_param(IS_FLASH_FAST_PROGRAM_ADDRESS(Address));
 290:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 291:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       /* Fast program a 32 double-word (64-bit) row at a specified address */
 292:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       FLASH_Program_Fast(Address, (uint32_t)Data);
 293:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     }
 294:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 295:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 296:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* return status */
 297:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   return status;
 298:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 299:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 300:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 301:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @brief Handle FLASH interrupt request.
 302:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @retval None
 303:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 304:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** void HAL_FLASH_IRQHandler(void)
 305:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** {
 306:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   uint32_t param = 0xFFFFFFFFU;
 307:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 308:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 309:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Save flash errors. Only ECC detection can be checked here as ECCC
 310:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****      generates NMI */
 311:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #ifdef CORE_CM0PLUS
 312:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   error = (FLASH->C2SR & FLASH_FLAG_SR_ERRORS);
 313:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 314:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Clear Current operation */
 315:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   CLEAR_BIT(FLASH->C2CR, pFlash.ProcedureOnGoing);
 316:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #else
 317:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   error = (FLASH->SR & FLASH_FLAG_SR_ERRORS);
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 7


 318:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 319:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Clear Current operation */
 320:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   CLEAR_BIT(FLASH->CR, pFlash.ProcedureOnGoing);
 321:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #endif
 322:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 323:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* A] Set parameter for user or error callbacks */
 324:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* check operation was a program or erase */
 325:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   if ((pFlash.ProcedureOnGoing & (FLASH_TYPEPROGRAM_DOUBLEWORD | FLASH_TYPEPROGRAM_FAST)) != 0U)
 326:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 327:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* return address being programmed */
 328:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     param = pFlash.Address;
 329:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 330:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   else if ((pFlash.ProcedureOnGoing & (FLASH_TYPEERASE_MASSERASE | FLASH_TYPEERASE_PAGES)) != 0U)
 331:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 332:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* return page number being erased (0 for mass erase) */
 333:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     param = pFlash.Page;
 334:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 335:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   else
 336:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 337:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* No Procedure on-going */
 338:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* Nothing to do, but check error if any */
 339:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 340:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 341:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* B] Check errors */
 342:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   if (error != 0U)
 343:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 344:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /*Save the error code*/
 345:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     pFlash.ErrorCode |= error;
 346:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 347:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* clear error flags */
 348:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(error);
 349:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 350:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /*Stop the procedure ongoing*/
 351:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_TYPENONE;
 352:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 353:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* Error callback */
 354:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     HAL_FLASH_OperationErrorCallback(param);
 355:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 356:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 357:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* C] Check FLASH End of Operation flag */
 358:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP))
 359:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 360:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* Clear FLASH End of Operation pending bit */
 361:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 362:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 363:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     if (pFlash.ProcedureOnGoing == FLASH_TYPEERASE_PAGES)
 364:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 365:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       /* Nb of pages to erased can be decreased */
 366:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       pFlash.NbPagesToErase--;
 367:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 368:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       /* Check if there are still pages to erase*/
 369:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       if (pFlash.NbPagesToErase != 0U)
 370:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       {
 371:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****         /* Increment page number */
 372:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****         pFlash.Page++;
 373:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****         FLASH_PageErase(pFlash.Page);
 374:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       }
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 8


 375:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       else
 376:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       {
 377:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****         /* No more pages to erase: stop erase pages procedure */
 378:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_TYPENONE;
 379:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       }
 380:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     }
 381:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     else
 382:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 383:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       /*Stop the ongoing procedure */
 384:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       pFlash.ProcedureOnGoing = FLASH_TYPENONE;
 385:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     }
 386:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 387:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* User callback */
 388:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     HAL_FLASH_EndOfOperationCallback(param);
 389:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 390:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 391:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   if (pFlash.ProcedureOnGoing == FLASH_TYPENONE)
 392:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 393:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* Disable End of Operation and Error interrupts */
 394:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT(FLASH_IT_EOP | FLASH_IT_OPERR | FLASH_IT_ECCC);
 395:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 396:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* Process Unlocked */
 397:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 398:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 399:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 400:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 401:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 402:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @brief  FLASH end of operation interrupt callback.
 403:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 404:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *                  Mass Erase: 0
 405:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *                  Page Erase: Page which has been erased
 406:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *                  Program: Address which was selected for data program
 407:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @retval None
 408:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 409:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** __weak void HAL_FLASH_EndOfOperationCallback(uint32_t ReturnValue)
 410:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** {
 411:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 412:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   UNUSED(ReturnValue);
 413:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 414:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 415:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****             the HAL_FLASH_EndOfOperationCallback could be implemented in the user file
 416:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****    */
 417:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 418:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 419:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 420:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @brief  FLASH operation error interrupt callback.
 421:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 422:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *                 Mass Erase: 0
 423:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *                 Page Erase: Page number which returned an error
 424:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *                 Program: Address which was selected for data program
 425:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @retval None
 426:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 427:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** __weak void HAL_FLASH_OperationErrorCallback(uint32_t ReturnValue)
 428:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** {
 429:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 430:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   UNUSED(ReturnValue);
 431:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 9


 432:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 433:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****             the HAL_FLASH_OperationErrorCallback could be implemented in the user file
 434:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****    */
 435:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 436:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 437:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 438:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @}
 439:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 440:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 441:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group2 Peripheral Control functions
 442:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****  *  @brief   Management functions
 443:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****  *
 444:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** @verbatim
 445:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****  ===============================================================================
 446:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****                       ##### Peripheral Control functions #####
 447:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****  ===============================================================================
 448:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     [..]
 449:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     This subsection provides a set of functions allowing to control the FLASH
 450:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     memory operations.
 451:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 452:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** @endverbatim
 453:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @{
 454:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 455:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 456:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 457:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Unlock the FLASH control register access.
 458:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL Status
 459:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 460:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Unlock(void)
 461:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** {
 462:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 463:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 464:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) != 0U)
 465:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 466:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* Authorize the FLASH Registers access */
 467:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 468:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 469:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 470:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* verify Flash is unlock */
 471:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) != 0U)
 472:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 473:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       status = HAL_ERROR;
 474:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     }
 475:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 476:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 477:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   return status;
 478:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 479:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 480:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 481:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Lock the FLASH control register access.
 482:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL Status
 483:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 484:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Lock(void)
 485:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** {
 486:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 487:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 488:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH Registers access */
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 10


 489:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* @Note  The lock and unlock procedure is done only using CR registers even from CPU2 */
 490:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_LOCK);
 491:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 492:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* verify Flash is locked */
 493:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) == 0U)
 494:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 495:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     status = HAL_ERROR;
 496:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 497:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 498:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   return status;
 499:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 500:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 501:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 502:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Unlock the FLASH Option Bytes Registers access.
 503:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL Status
 504:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 505:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Unlock(void)
 506:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** {
 507:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 508:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 509:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* @Note The lock and unlock procedure is done only using CR registers even from CPU2 */
 510:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   if (READ_BIT(FLASH->CR, FLASH_CR_OPTLOCK) != 0U)
 511:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 512:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* Authorizes the Option Byte register programming */
 513:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY1);
 514:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY2);
 515:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 516:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* verify option bytes are unlocked */
 517:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     if (READ_BIT(FLASH->CR, FLASH_CR_OPTLOCK) == 0U)
 518:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 519:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       status = HAL_OK;
 520:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     }
 521:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 522:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 523:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   return status;
 524:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 525:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 526:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 527:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Lock the FLASH Option Bytes Registers access.
 528:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL Status
 529:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 530:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Lock(void)
 531:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** {
 532:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 533:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 534:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 535:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* @Note The lock and unlock procedure is done only using CR registers even from CPU2 */
 536:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_OPTLOCK);
 537:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 538:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* verify option bytes are lock */
 539:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   if (READ_BIT(FLASH->CR, FLASH_CR_OPTLOCK) == 0U)
 540:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 541:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     status = HAL_ERROR;
 542:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 543:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 544:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   return status;
 545:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 11


 546:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 547:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 548:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Launch the option byte loading.
 549:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL Status
 550:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 551:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Launch(void)
 552:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** {
 553:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Set the bit to force the option byte reloading */
 554:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* The OB launch is done from the same register either from CPU1 or CPU2 */
 555:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_OBL_LAUNCH);
 556:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 557:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* We should not reach here : Option byte launch generates Option byte reset
 558:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****      so return error */
 559:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   return HAL_ERROR;
 560:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 561:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 562:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 563:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @}
 564:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 565:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 566:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group3 Peripheral State and Errors functions
 567:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****  *  @brief   Peripheral Errors functions
 568:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****  *
 569:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** @verbatim
 570:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****  ===============================================================================
 571:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****                 ##### Peripheral Errors functions #####
 572:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****  ===============================================================================
 573:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     [..]
 574:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     This subsection permits to get in run-time Errors of the FLASH peripheral.
 575:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 576:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** @endverbatim
 577:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @{
 578:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 579:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 580:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 581:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Get the specific FLASH error flag.
 582:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @retval FLASH_ErrorCode The returned value can be
 583:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_NONE No error set
 584:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_OP FLASH Operation error
 585:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_PROG FLASH Programming error
 586:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_WRP FLASH Write protection error
 587:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_PGA FLASH Programming alignment error
 588:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_SIZ FLASH Size error
 589:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_PGS FLASH Programming sequence error
 590:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_MIS FLASH Fast programming data miss error
 591:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_FAST FLASH Fast programming error
 592:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_RD FLASH Read Protection error (PCROP)
 593:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_OPTV FLASH Option validity error
 594:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 595:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** uint32_t HAL_FLASH_GetError(void)
 596:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** {
 597:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   return pFlash.ErrorCode;
 598:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 599:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 600:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 601:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @}
 602:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 12


 603:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 604:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 605:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @}
 606:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 607:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 608:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /* Private functions ---------------------------------------------------------*/
 609:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 610:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /** @addtogroup FLASH_Private_Functions
 611:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @{
 612:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 613:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 614:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 615:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Wait for a FLASH operation to complete.
 616:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @param  Timeout Maximum flash operation timeout
 617:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 618:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 619:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout)
 620:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** {
 621:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 622:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
 623:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 624:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
 625:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****      Even if the FLASH operation fails, the BUSY flag will be reset and an error
 626:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****      flag will be set */
 627:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY))
 628:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 629:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     if ((HAL_GetTick() - tickstart) >= Timeout)
 630:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 631:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       return HAL_TIMEOUT;
 632:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     }
 633:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 634:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 635:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* check flash errors. Only ECC correction can be checked here as ECCD
 636:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       generates NMI */
 637:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #ifdef CORE_CM0PLUS
 638:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   error = FLASH->C2SR;
 639:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #else
 640:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   error = FLASH->SR;
 641:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #endif
 642:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 643:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Check FLASH End of Operation flag */
 644:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   if ((error & FLASH_FLAG_EOP) != 0U)
 645:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 646:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /* Clear FLASH End of Operation pending bit */
 647:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 648:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 649:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 650:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Now update error variable to only error value */
 651:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   error &= FLASH_FLAG_SR_ERRORS;
 652:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 653:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* clear error flags */
 654:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   __HAL_FLASH_CLEAR_FLAG(error);
 655:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 656:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   if (error != 0U)
 657:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 658:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     /*Save the error code*/
 659:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     pFlash.ErrorCode = error;
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 13


 660:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 661:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     return HAL_ERROR;
 662:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 663:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 664:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Wait for control register to be written */
 665:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_CFGBSY))
 666:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 667:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     if ((HAL_GetTick() - tickstart) >= Timeout)
 668:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 669:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       return HAL_TIMEOUT;
 670:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     }
 671:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 672:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 673:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   return HAL_OK;
 674:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 675:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 676:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 677:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Program double-word (64-bit) at a specified address.
 678:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @param  Address Specifies the address to be programmed.
 679:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @param  Data Specifies the data to be programmed.
 680:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @retval None
 681:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 682:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** static void FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data)
 683:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** {
 684:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #ifdef CORE_CM0PLUS
 685:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Set PG bit */
 686:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->C2CR, FLASH_CR_PG);
 687:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #else
 688:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Set PG bit */
 689:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_PG);
 690:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #endif
 691:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 692:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Program first word */
 693:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *(uint32_t *)Address = (uint32_t)Data;
 694:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 695:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Barrier to ensure programming is performed in 2 steps, in right order
 696:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     (independently of compiler optimization behavior) */
 697:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   __ISB();
 698:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 699:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Program second word */
 700:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   *(uint32_t *)(Address + 4U) = (uint32_t)(Data >> 32U);
 701:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 702:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 703:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** /**
 704:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Fast program a 32 row double-word (64-bit) at a specified address.
 705:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @param  Address Specifies the address to be programmed.
 706:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @param  DataAddress Specifies the address where the data are stored.
 707:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   * @retval None
 708:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   */
 709:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #ifdef CORE_CM0PLUS
 710:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** static __RAM_FUNC void FLASH_Program_Fast(uint32_t Address, uint32_t DataAddress)
 711:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #else
 712:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** static void FLASH_Program_Fast(uint32_t Address, uint32_t DataAddress)
 713:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #endif
 714:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** {
  27              		.loc 1 714 1 view -0
  28              		.cfi_startproc
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 14


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
 715:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   uint8_t row_index = (2 * FLASH_NB_DOUBLE_WORDS_IN_ROW);
  31              		.loc 1 715 3 view .LVU1
 716:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t *)Address;
  32              		.loc 1 716 3 view .LVU2
 717:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   __IO uint32_t *src_addr = (__IO uint32_t *)DataAddress;
  33              		.loc 1 717 3 view .LVU3
 718:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   uint32_t primask_bit;
  34              		.loc 1 718 3 view .LVU4
 719:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 720:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Set FSTPG bit */
 721:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #ifdef CORE_CM0PLUS
 722:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->C2CR, FLASH_CR_FSTPG);
 723:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #else
 724:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_FSTPG);
  35              		.loc 1 724 3 view .LVU5
  36 0000 0A4A     		ldr	r2, .L6
  37 0002 5369     		ldr	r3, [r2, #20]
  38 0004 43F48023 		orr	r3, r3, #262144
 714:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   uint8_t row_index = (2 * FLASH_NB_DOUBLE_WORDS_IN_ROW);
  39              		.loc 1 714 1 is_stmt 0 view .LVU6
  40 0008 30B5     		push	{r4, r5, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 12
  43              		.cfi_offset 4, -12
  44              		.cfi_offset 5, -8
  45              		.cfi_offset 14, -4
  46              		.loc 1 724 3 view .LVU7
  47 000a 5361     		str	r3, [r2, #20]
 725:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #endif
 726:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 727:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Enter critical section: row programming should not be longer than 7 ms */
 728:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   primask_bit = __get_PRIMASK();
  48              		.loc 1 728 3 is_stmt 1 view .LVU8
  49              	.LBB10:
  50              	.LBI10:
  51              		.file 2 "hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h"
   1:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 15


  20:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  52:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 16


  77:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 122:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 130:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 17


 134:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 141:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 157:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 163:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 166:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 189:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 190:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 18


 191:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 193:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 194:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 197:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 198:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 202:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 203:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 204:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 205:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 209:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** */
 210:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 211:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 219:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 223:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 224:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 225:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 226:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 228:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 230:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 231:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 234:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 236:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 238:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 242:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 244:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 245:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 246:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 247:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 19


 248:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 249:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 252:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 253:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 258:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 260:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 262:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 263:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 264:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 265:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 269:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 271:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 273:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 274:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 275:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 276:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 280:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 282:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 284:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 285:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 286:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 287:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 291:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 292:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 294:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 297:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 298:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 299:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 301:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 302:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 303:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 304:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 20


 305:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 306:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 310:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 311:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 313:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 314:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 315:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 317:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 318:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 319:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 321:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 325:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 326:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 328:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 331:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   int16_t result;
 332:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 333:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 335:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 336:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 337:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 338:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 339:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 340:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
 345:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 346:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 348:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   {
 351:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     return op1;
 352:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 353:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 355:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 356:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 357:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 358:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 21


 362:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 364:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 366:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 367:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 368:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 372:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 373:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 375:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 376:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 382:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 384:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   {
 387:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     result <<= 1U;
 388:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     s--;
 390:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 391:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 393:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 394:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 395:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 396:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 397:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 398:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 403:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 405:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      is non-zero".
 411:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    */
 414:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   if (value == 0U)
 415:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   {
 416:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     return 32U;
 417:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 418:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_clz(value);
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 22


 419:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 420:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 421:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 422:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 427:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 432:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 434:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 435:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 436:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 439:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     */
 442:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 444:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 446:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 447:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 448:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 449:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 454:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 456:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 457:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 458:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 461:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     */
 464:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 466:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 471:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 23


 476:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 479:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 482:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 484:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 486:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 493:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 495:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
 496:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 499:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 500:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 501:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 502:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 503:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 510:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 512:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
 513:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 514:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 516:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 517:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 518:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 519:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 520:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 527:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 529:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
 530:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 531:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 24


 533:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 534:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 535:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 537:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 540:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 542:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 544:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 545:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 550:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 551:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 555:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
 560:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 561:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __extension__ \
 563:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
 564:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
 567:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  })
 568:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 569:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 570:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 571:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
 576:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 577:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __extension__ \
 579:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** ({                          \
 580:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __RES; \
 583:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  })
 584:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 585:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 586:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 587:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 25


 590:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Rotated value
 592:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 593:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 595:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 596:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 597:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 599:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 600:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 601:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 602:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 603:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 608:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 610:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 611:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 612:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 615:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     */
 618:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 620:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 622:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 623:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 624:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 625:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 630:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 632:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 633:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 634:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 637:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     */
 640:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 642:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 644:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 645:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 646:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 26


 647:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 652:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 654:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 655:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 656:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 658:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 659:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 660:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 661:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 662:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 667:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 669:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 671:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 672:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 673:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 674:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 679:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 681:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 683:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 684:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 685:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 686:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 691:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 693:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 695:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 696:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 700:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 701:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 27


 704:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
 706:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 707:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 709:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   {
 711:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > max)
 714:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     {
 715:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
 716:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     }
 717:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < min)
 718:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     {
 719:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****       return min;
 720:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     }
 721:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 722:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return val;
 723:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 724:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 725:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 726:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return             Saturated value
 731:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 732:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 734:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   {
 736:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     {
 739:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****       return max;
 740:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     }
 741:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     else if (val < 0)
 742:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     {
 743:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****       return 0U;
 744:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     }
 745:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 746:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 748:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 749:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 753:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 754:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 757:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 28


 761:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 762:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 764:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 765:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 766:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 769:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 770:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 771:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 772:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 777:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 779:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 780:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 781:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 784:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 785:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 786:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 787:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 795:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 796:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 798:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 799:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 800:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 801:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 802:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 807:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 809:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 811:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 812:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 813:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 814:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 29


 818:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 819:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 821:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 823:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 824:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 825:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 826:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 831:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 833:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 835:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 836:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 837:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 838:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 843:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 845:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 846:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 847:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 850:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 851:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 852:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 853:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 858:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 860:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 861:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 862:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 865:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 866:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 867:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 868:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 873:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 30


 875:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t result;
 876:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 877:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 879:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 880:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 881:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 882:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 883:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 890:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 892:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
 893:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 894:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 896:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 897:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 898:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 899:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 900:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 907:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 909:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
 910:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 911:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 913:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 914:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 915:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 916:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 917:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 924:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 926:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    uint32_t result;
 927:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 928:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****    return(result);
 930:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 931:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 31


 932:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 935:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 937:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 938:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 942:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 943:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 944:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 945:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 949:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 951:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 953:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 954:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 955:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 956:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 960:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 961:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 962:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 963:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 964:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 965:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 966:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 967:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 968:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 969:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 970:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 971:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 972:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 973:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 974:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 975:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 976:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 977:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 978:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 979:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 980:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 981:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 982:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 983:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 984:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 985:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 986:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 987:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 988:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 32


 989:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 990:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 991:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 992:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 993:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 994:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 995:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 996:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 997:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 998:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 999:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
1000:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
1001:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
1002:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
1003:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
1004:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ISB();
1005:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
1006:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1007:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1008:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1009:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
1010:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
1011:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
1012:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
1013:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
1014:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
1015:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
1016:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
1017:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ISB();
1018:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
1019:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1020:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1021:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1022:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
1023:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
1024:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
1025:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
1026:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
1027:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
1028:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
1029:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1030:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1031:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
1032:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1033:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
1034:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1035:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1036:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
1037:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
1038:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
1039:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
1040:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
1041:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
1042:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
1043:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1044:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1045:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 33


1046:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1047:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
1048:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1049:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1050:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
1051:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
1052:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
1053:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
1054:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
1055:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
1056:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
1057:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1058:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1059:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
1060:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1061:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
1062:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1063:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1064:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
1065:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
1066:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
1067:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
1068:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
1069:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
1070:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
1071:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1072:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1073:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
1074:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1075:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
1076:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1077:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1078:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1079:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
1080:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
1081:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
1082:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
1083:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
1084:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
1085:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
1086:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1087:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1088:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
1089:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1090:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
1091:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1092:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1093:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1094:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
1095:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
1096:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
1097:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
1098:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
1099:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
1100:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
1101:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
1102:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 34


1103:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1104:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1105:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1106:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
1107:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
1108:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
1109:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
1110:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
1111:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
1112:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
1113:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
1114:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
1115:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1116:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1117:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1118:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
1119:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
1120:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
1121:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
1122:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
1123:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
1124:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
1125:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1126:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1127:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
1128:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1129:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
1130:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1131:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1132:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1133:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
1134:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
1135:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
1136:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
1137:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
1138:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
1139:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
1140:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1141:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1142:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
1143:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1144:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
1145:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1146:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1147:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1148:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
1149:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
1150:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
1151:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
1152:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
1153:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
1154:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
1155:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
1156:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
1157:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1158:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1159:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 35


1160:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
1161:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
1162:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
1163:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
1164:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
1165:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
1166:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
1167:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
1168:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
1169:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1170:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1171:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1172:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1173:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
1174:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
1175:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
1176:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
1177:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
1178:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
1179:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
1180:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1181:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1182:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
1183:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1184:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
1185:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1186:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1187:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
1188:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
1189:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
1190:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
1191:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
1192:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
1193:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
1194:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
1195:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
1196:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1197:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1198:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1199:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
1200:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
1201:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
1202:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
1203:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
1204:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
  52              		.loc 2 1204 31 view .LVU9
  53              	.LBB11:
1205:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
1206:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
  54              		.loc 2 1206 3 view .LVU10
1207:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1208:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
  55              		.loc 2 1208 3 view .LVU11
  56              		.syntax unified
  57              	@ 1208 "hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
  58 000c EFF31084 		MRS r4, primask
  59              	@ 0 "" 2
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 36


  60              	.LVL1:
1209:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
  61              		.loc 2 1209 3 view .LVU12
  62              		.loc 2 1209 3 is_stmt 0 view .LVU13
  63              		.thumb
  64              		.syntax unified
  65              	.LBE11:
  66              	.LBE10:
 729:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   __disable_irq();
  67              		.loc 1 729 3 is_stmt 1 view .LVU14
  68              	.LBB12:
  69              	.LBI12:
 960:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
  70              		.loc 2 960 27 view .LVU15
  71              	.LBB13:
 962:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
  72              		.loc 2 962 3 view .LVU16
  73              		.syntax unified
  74              	@ 962 "hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
  75 0010 72B6     		cpsid i
  76              	@ 0 "" 2
 963:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  77              		.loc 2 963 1 is_stmt 0 view .LVU17
  78              		.thumb
  79              		.syntax unified
  80 0012 0023     		movs	r3, #0
  81              	.LVL2:
  82              	.L2:
 963:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  83              		.loc 2 963 1 view .LVU18
  84              	.LBE13:
  85              	.LBE12:
 730:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 731:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Program the double word of the row */
 732:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   do
  86              		.loc 1 732 3 is_stmt 1 discriminator 1 view .LVU19
 733:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 734:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     *dest_addr = *src_addr;
  87              		.loc 1 734 5 discriminator 1 view .LVU20
  88              		.loc 1 734 18 is_stmt 0 discriminator 1 view .LVU21
  89 0014 CD58     		ldr	r5, [r1, r3]
  90              		.loc 1 734 16 discriminator 1 view .LVU22
  91 0016 C550     		str	r5, [r0, r3]
 735:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     dest_addr++;
  92              		.loc 1 735 5 is_stmt 1 discriminator 1 view .LVU23
  93              	.LVL3:
 736:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     src_addr++;
  94              		.loc 1 736 5 discriminator 1 view .LVU24
 737:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     row_index--;
  95              		.loc 1 737 5 discriminator 1 view .LVU25
 738:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 739:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   while (row_index != 0U);
  96              		.loc 1 739 9 discriminator 1 view .LVU26
  97              		.loc 1 739 3 is_stmt 0 discriminator 1 view .LVU27
  98 0018 0433     		adds	r3, r3, #4
  99              	.LVL4:
 100              		.loc 1 739 3 discriminator 1 view .LVU28
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 37


 101 001a B3F5807F 		cmp	r3, #256
 102 001e F9D1     		bne	.L2
 103              	.LVL5:
 104              	.L3:
 740:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 741:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* wait for BSY in order to be sure that flash operation is ended before
 742:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****      allowing prefetch in flash. Timeout does not return status, as it will
 743:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****      be anyway done later */
 744:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != 0U)
 745:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 746:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 105              		.loc 1 746 3 is_stmt 1 discriminator 1 view .LVU29
 744:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 106              		.loc 1 744 9 discriminator 1 view .LVU30
 744:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 107              		.loc 1 744 10 is_stmt 0 discriminator 1 view .LVU31
 108 0020 1369     		ldr	r3, [r2, #16]
 744:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 109              		.loc 1 744 9 discriminator 1 view .LVU32
 110 0022 DB03     		lsls	r3, r3, #15
 111 0024 FCD4     		bmi	.L3
 747:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 748:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Exit critical section: restore previous priority mask */
 749:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   __set_PRIMASK(primask_bit);
 112              		.loc 1 749 3 is_stmt 1 view .LVU33
 113              	.LVL6:
 114              	.LBB14:
 115              	.LBI14:
1210:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
1211:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1212:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1213:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1214:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
1215:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
1216:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
1217:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
1218:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
1219:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
1220:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
1221:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
1222:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1223:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
1224:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
1225:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
1226:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
1227:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1228:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
1229:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
1230:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
1231:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
1232:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
1233:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
1234:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 116              		.loc 2 1234 27 view .LVU34
 117              	.LBB15:
1235:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
1236:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 38


 118              		.loc 2 1236 3 view .LVU35
 119              		.syntax unified
 120              	@ 1236 "hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 121 0026 84F31088 		MSR primask, r4
 122              	@ 0 "" 2
 123              	.LVL7:
 124              		.loc 2 1236 3 is_stmt 0 view .LVU36
 125              		.thumb
 126              		.syntax unified
 127              	.LBE15:
 128              	.LBE14:
 750:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 129              		.loc 1 750 1 view .LVU37
 130 002a 30BD     		pop	{r4, r5, pc}
 131              	.LVL8:
 132              	.L7:
 133              		.loc 1 750 1 view .LVU38
 134              		.align	2
 135              	.L6:
 136 002c 00400058 		.word	1476411392
 137              		.cfi_endproc
 138              	.LFE734:
 140              		.section	.text.HAL_FLASH_EndOfOperationCallback,"ax",%progbits
 141              		.align	1
 142              		.weak	HAL_FLASH_EndOfOperationCallback
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 147              	HAL_FLASH_EndOfOperationCallback:
 148              	.LVL9:
 149              	.LFB724:
 410:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 150              		.loc 1 410 1 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 412:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 155              		.loc 1 412 3 view .LVU40
 417:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 156              		.loc 1 417 1 is_stmt 0 view .LVU41
 157 0000 7047     		bx	lr
 158              		.cfi_endproc
 159              	.LFE724:
 161              		.section	.text.HAL_FLASH_OperationErrorCallback,"ax",%progbits
 162              		.align	1
 163              		.weak	HAL_FLASH_OperationErrorCallback
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	HAL_FLASH_OperationErrorCallback:
 169              	.LFB736:
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 7047     		bx	lr
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 39


 175              		.cfi_endproc
 176              	.LFE736:
 178              		.section	.text.HAL_FLASH_IRQHandler,"ax",%progbits
 179              		.align	1
 180              		.global	HAL_FLASH_IRQHandler
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 185              	HAL_FLASH_IRQHandler:
 186              	.LFB723:
 305:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   uint32_t param = 0xFFFFFFFFU;
 187              		.loc 1 305 1 is_stmt 1 view -0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 306:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 191              		.loc 1 306 3 view .LVU43
 192              	.LVL10:
 307:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 193              		.loc 1 307 3 view .LVU44
 317:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 194              		.loc 1 317 3 view .LVU45
 317:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 195              		.loc 1 317 17 is_stmt 0 view .LVU46
 196 0000 2549     		ldr	r1, .L28
 305:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   uint32_t param = 0xFFFFFFFFU;
 197              		.loc 1 305 1 view .LVU47
 198 0002 38B5     		push	{r3, r4, r5, lr}
 199              	.LCFI1:
 200              		.cfi_def_cfa_offset 16
 201              		.cfi_offset 3, -16
 202              		.cfi_offset 4, -12
 203              		.cfi_offset 5, -8
 204              		.cfi_offset 14, -4
 320:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #endif
 205              		.loc 1 320 3 view .LVU48
 206 0004 254C     		ldr	r4, .L28+4
 317:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 207              		.loc 1 317 17 view .LVU49
 208 0006 0B69     		ldr	r3, [r1, #16]
 320:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #endif
 209              		.loc 1 320 3 view .LVU50
 210 0008 A268     		ldr	r2, [r4, #8]
 211 000a 4869     		ldr	r0, [r1, #20]
 212 000c 20EA0200 		bic	r0, r0, r2
 317:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 213              		.loc 1 317 9 view .LVU51
 214 0010 23F47053 		bic	r3, r3, #15360
 320:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #endif
 215              		.loc 1 320 3 view .LVU52
 216 0014 4861     		str	r0, [r1, #20]
 325:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 217              		.loc 1 325 32 view .LVU53
 218 0016 2249     		ldr	r1, .L28+8
 317:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 219              		.loc 1 317 9 view .LVU54
 220 0018 23F00503 		bic	r3, r3, #5
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 40


 221 001c 1B04     		lsls	r3, r3, #16
 325:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 222              		.loc 1 325 32 view .LVU55
 223 001e 1140     		ands	r1, r1, r2
 317:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 224              		.loc 1 317 9 view .LVU56
 225 0020 1B0C     		lsrs	r3, r3, #16
 226              	.LVL11:
 320:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #endif
 227              		.loc 1 320 3 is_stmt 1 view .LVU57
 325:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 228              		.loc 1 325 3 view .LVU58
 325:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 229              		.loc 1 325 6 is_stmt 0 view .LVU59
 230 0022 0029     		cmp	r1, #0
 231 0024 2DD0     		beq	.L11
 328:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 232              		.loc 1 328 5 is_stmt 1 view .LVU60
 328:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 233              		.loc 1 328 11 is_stmt 0 view .LVU61
 234 0026 E568     		ldr	r5, [r4, #12]
 235              	.LVL12:
 236              	.L12:
 339:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 237              		.loc 1 339 3 is_stmt 1 view .LVU62
 342:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 238              		.loc 1 342 3 view .LVU63
 342:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 239              		.loc 1 342 6 is_stmt 0 view .LVU64
 240 0028 4BB1     		cbz	r3, .L13
 345:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 241              		.loc 1 345 5 is_stmt 1 view .LVU65
 345:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 242              		.loc 1 345 22 is_stmt 0 view .LVU66
 243 002a 6268     		ldr	r2, [r4, #4]
 244 002c 1A43     		orrs	r2, r2, r3
 245 002e 6260     		str	r2, [r4, #4]
 348:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 246              		.loc 1 348 5 is_stmt 1 view .LVU67
 348:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 247              		.loc 1 348 5 view .LVU68
 348:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 248              		.loc 1 348 5 view .LVU69
 348:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 249              		.loc 1 348 5 view .LVU70
 250 0030 194A     		ldr	r2, .L28
 354:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 251              		.loc 1 354 5 is_stmt 0 view .LVU71
 252 0032 2846     		mov	r0, r5
 348:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 253              		.loc 1 348 5 view .LVU72
 254 0034 1361     		str	r3, [r2, #16]
 348:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 255              		.loc 1 348 5 is_stmt 1 view .LVU73
 351:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 256              		.loc 1 351 5 view .LVU74
 351:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 41


 257              		.loc 1 351 29 is_stmt 0 view .LVU75
 258 0036 0023     		movs	r3, #0
 259              	.LVL13:
 351:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 260              		.loc 1 351 29 view .LVU76
 261 0038 A360     		str	r3, [r4, #8]
 354:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 262              		.loc 1 354 5 is_stmt 1 view .LVU77
 263 003a FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 264              	.LVL14:
 265              	.L13:
 358:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 266              		.loc 1 358 3 view .LVU78
 358:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 267              		.loc 1 358 7 is_stmt 0 view .LVU79
 268 003e 164B     		ldr	r3, .L28
 269 0040 1A69     		ldr	r2, [r3, #16]
 358:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 270              		.loc 1 358 6 view .LVU80
 271 0042 D207     		lsls	r2, r2, #31
 272 0044 10D5     		bpl	.L14
 363:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 273              		.loc 1 363 15 discriminator 4 view .LVU81
 274 0046 A268     		ldr	r2, [r4, #8]
 361:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 275              		.loc 1 361 5 is_stmt 1 discriminator 4 view .LVU82
 361:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 276              		.loc 1 361 5 discriminator 4 view .LVU83
 361:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 277              		.loc 1 361 5 discriminator 4 view .LVU84
 361:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 278              		.loc 1 361 5 discriminator 4 view .LVU85
 279 0048 0121     		movs	r1, #1
 363:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 280              		.loc 1 363 8 is_stmt 0 discriminator 4 view .LVU86
 281 004a 022A     		cmp	r2, #2
 361:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 282              		.loc 1 361 5 discriminator 4 view .LVU87
 283 004c 1961     		str	r1, [r3, #16]
 361:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 284              		.loc 1 361 5 is_stmt 1 discriminator 4 view .LVU88
 363:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 285              		.loc 1 363 5 discriminator 4 view .LVU89
 363:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 286              		.loc 1 363 8 is_stmt 0 discriminator 4 view .LVU90
 287 004e 1FD1     		bne	.L15
 366:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 288              		.loc 1 366 7 is_stmt 1 view .LVU91
 366:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 289              		.loc 1 366 28 is_stmt 0 view .LVU92
 290 0050 6369     		ldr	r3, [r4, #20]
 291 0052 013B     		subs	r3, r3, #1
 292 0054 6361     		str	r3, [r4, #20]
 369:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       {
 293              		.loc 1 369 7 is_stmt 1 view .LVU93
 369:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       {
 294              		.loc 1 369 10 is_stmt 0 view .LVU94
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 42


 295 0056 DBB1     		cbz	r3, .L15
 372:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****         FLASH_PageErase(pFlash.Page);
 296              		.loc 1 372 9 is_stmt 1 view .LVU95
 372:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****         FLASH_PageErase(pFlash.Page);
 297              		.loc 1 372 20 is_stmt 0 view .LVU96
 298 0058 2069     		ldr	r0, [r4, #16]
 299 005a 0844     		add	r0, r0, r1
 300 005c 2061     		str	r0, [r4, #16]
 373:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       }
 301              		.loc 1 373 9 is_stmt 1 view .LVU97
 302 005e FFF7FEFF 		bl	FLASH_PageErase
 303              	.LVL15:
 304              	.L16:
 388:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 305              		.loc 1 388 5 view .LVU98
 306 0062 2846     		mov	r0, r5
 307 0064 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 308              	.LVL16:
 309              	.L14:
 391:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 310              		.loc 1 391 3 view .LVU99
 391:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 311              		.loc 1 391 6 is_stmt 0 view .LVU100
 312 0068 A168     		ldr	r1, [r4, #8]
 313 006a 49B9     		cbnz	r1, .L10
 394:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 314              		.loc 1 394 5 is_stmt 1 discriminator 1 view .LVU101
 394:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 315              		.loc 1 394 5 discriminator 1 view .LVU102
 394:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 316              		.loc 1 394 5 discriminator 1 view .LVU103
 317 006c 0A4B     		ldr	r3, .L28
 318 006e 9A69     		ldr	r2, [r3, #24]
 319 0070 22F08072 		bic	r2, r2, #16777216
 320 0074 9A61     		str	r2, [r3, #24]
 394:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 321              		.loc 1 394 5 discriminator 1 view .LVU104
 394:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 322              		.loc 1 394 5 discriminator 1 view .LVU105
 323 0076 5A69     		ldr	r2, [r3, #20]
 324 0078 22F04072 		bic	r2, r2, #50331648
 325 007c 5A61     		str	r2, [r3, #20]
 394:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 326              		.loc 1 394 5 discriminator 1 view .LVU106
 397:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 327              		.loc 1 397 5 discriminator 1 view .LVU107
 397:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 328              		.loc 1 397 5 discriminator 1 view .LVU108
 329 007e 2170     		strb	r1, [r4]
 397:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 330              		.loc 1 397 5 discriminator 1 view .LVU109
 331              	.L10:
 399:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 332              		.loc 1 399 1 is_stmt 0 view .LVU110
 333 0080 38BD     		pop	{r3, r4, r5, pc}
 334              	.LVL17:
 335              	.L11:
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 43


 330:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 336              		.loc 1 330 8 is_stmt 1 view .LVU111
 330:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 337              		.loc 1 330 11 is_stmt 0 view .LVU112
 338 0082 12F0060F 		tst	r2, #6
 333:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 339              		.loc 1 333 5 is_stmt 1 view .LVU113
 333:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 340              		.loc 1 333 11 is_stmt 0 view .LVU114
 341 0086 14BF     		ite	ne
 342 0088 2569     		ldrne	r5, [r4, #16]
 343              	.LVL18:
 306:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 344              		.loc 1 306 12 view .LVU115
 345 008a 4FF0FF35 		moveq	r5, #-1
 346              	.LVL19:
 306:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 347              		.loc 1 306 12 view .LVU116
 348 008e CBE7     		b	.L12
 349              	.LVL20:
 350              	.L15:
 378:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       }
 351              		.loc 1 378 9 is_stmt 1 view .LVU117
 378:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****       }
 352              		.loc 1 378 33 is_stmt 0 view .LVU118
 353 0090 0023     		movs	r3, #0
 354 0092 A360     		str	r3, [r4, #8]
 355 0094 E5E7     		b	.L16
 356              	.L29:
 357 0096 00BF     		.align	2
 358              	.L28:
 359 0098 00400058 		.word	1476411392
 360 009c 00000000 		.word	.LANCHOR0
 361 00a0 01000400 		.word	262145
 362              		.cfi_endproc
 363              	.LFE723:
 365              		.section	.text.HAL_FLASH_Unlock,"ax",%progbits
 366              		.align	1
 367              		.global	HAL_FLASH_Unlock
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 372              	HAL_FLASH_Unlock:
 373              	.LFB726:
 461:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 374              		.loc 1 461 1 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 462:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 379              		.loc 1 462 3 view .LVU120
 380              	.LVL21:
 464:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 381              		.loc 1 464 3 view .LVU121
 464:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 382              		.loc 1 464 7 is_stmt 0 view .LVU122
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 44


 383 0000 064B     		ldr	r3, .L33
 384 0002 5A69     		ldr	r2, [r3, #20]
 464:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 385              		.loc 1 464 6 view .LVU123
 386 0004 002A     		cmp	r2, #0
 467:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 387              		.loc 1 467 5 is_stmt 1 view .LVU124
 388 0006 BFBF     		itttt	lt
 389 0008 054A     		ldrlt	r2, .L33+4
 390 000a 9A60     		strlt	r2, [r3, #8]
 468:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 391              		.loc 1 468 5 view .LVU125
 392 000c 02F18832 		addlt	r2, r2, #-2004318072
 393 0010 9A60     		strlt	r2, [r3, #8]
 471:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 394              		.loc 1 471 5 view .LVU126
 471:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 395              		.loc 1 471 9 is_stmt 0 view .LVU127
 396 0012 BABF     		itte	lt
 397 0014 5869     		ldrlt	r0, [r3, #20]
 462:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 398              		.loc 1 462 21 view .LVU128
 399 0016 C00F     		lsrlt	r0, r0, #31
 400 0018 0020     		movge	r0, #0
 401              	.LVL22:
 477:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 402              		.loc 1 477 3 is_stmt 1 view .LVU129
 478:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 403              		.loc 1 478 1 is_stmt 0 view .LVU130
 404 001a 7047     		bx	lr
 405              	.L34:
 406              		.align	2
 407              	.L33:
 408 001c 00400058 		.word	1476411392
 409 0020 23016745 		.word	1164378403
 410              		.cfi_endproc
 411              	.LFE726:
 413              		.section	.text.HAL_FLASH_Lock,"ax",%progbits
 414              		.align	1
 415              		.global	HAL_FLASH_Lock
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 420              	HAL_FLASH_Lock:
 421              	.LFB727:
 485:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 422              		.loc 1 485 1 is_stmt 1 view -0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              		@ link register save eliminated.
 486:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 427              		.loc 1 486 3 view .LVU132
 428              	.LVL23:
 490:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 429              		.loc 1 490 3 view .LVU133
 430 0000 044B     		ldr	r3, .L36
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 45


 431 0002 5A69     		ldr	r2, [r3, #20]
 432 0004 42F00042 		orr	r2, r2, #-2147483648
 433 0008 5A61     		str	r2, [r3, #20]
 493:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 434              		.loc 1 493 3 view .LVU134
 493:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 435              		.loc 1 493 7 is_stmt 0 view .LVU135
 436 000a 5869     		ldr	r0, [r3, #20]
 437              	.LVL24:
 498:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 438              		.loc 1 498 3 is_stmt 1 view .LVU136
 499:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 439              		.loc 1 499 1 is_stmt 0 view .LVU137
 440 000c C043     		mvns	r0, r0
 441              	.LVL25:
 499:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 442              		.loc 1 499 1 view .LVU138
 443 000e C00F     		lsrs	r0, r0, #31
 444              	.LVL26:
 499:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 445              		.loc 1 499 1 view .LVU139
 446 0010 7047     		bx	lr
 447              	.L37:
 448 0012 00BF     		.align	2
 449              	.L36:
 450 0014 00400058 		.word	1476411392
 451              		.cfi_endproc
 452              	.LFE727:
 454              		.section	.text.HAL_FLASH_OB_Unlock,"ax",%progbits
 455              		.align	1
 456              		.global	HAL_FLASH_OB_Unlock
 457              		.syntax unified
 458              		.thumb
 459              		.thumb_func
 461              	HAL_FLASH_OB_Unlock:
 462              	.LFB728:
 506:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 463              		.loc 1 506 1 is_stmt 1 view -0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 507:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 468              		.loc 1 507 3 view .LVU141
 469              	.LVL27:
 510:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 470              		.loc 1 510 3 view .LVU142
 510:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 471              		.loc 1 510 7 is_stmt 0 view .LVU143
 472 0000 074B     		ldr	r3, .L41
 473 0002 5A69     		ldr	r2, [r3, #20]
 510:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 474              		.loc 1 510 6 view .LVU144
 475 0004 5200     		lsls	r2, r2, #1
 513:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY2);
 476              		.loc 1 513 5 is_stmt 1 view .LVU145
 477 0006 41BF     		itttt	mi
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 46


 478 0008 064A     		ldrmi	r2, .L41+4
 479 000a DA60     		strmi	r2, [r3, #12]
 514:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 480              		.loc 1 514 5 view .LVU146
 481 000c 02F14432 		addmi	r2, r2, #1145324612
 482 0010 DA60     		strmi	r2, [r3, #12]
 517:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 483              		.loc 1 517 5 view .LVU147
 517:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 484              		.loc 1 517 9 is_stmt 0 view .LVU148
 485 0012 46BF     		itte	mi
 486 0014 5869     		ldrmi	r0, [r3, #20]
 507:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 487              		.loc 1 507 21 view .LVU149
 488 0016 C0F38070 		ubfxmi	r0, r0, #30, #1
 489 001a 0120     		movpl	r0, #1
 490              	.LVL28:
 523:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 491              		.loc 1 523 3 is_stmt 1 view .LVU150
 524:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 492              		.loc 1 524 1 is_stmt 0 view .LVU151
 493 001c 7047     		bx	lr
 494              	.L42:
 495 001e 00BF     		.align	2
 496              	.L41:
 497 0020 00400058 		.word	1476411392
 498 0024 3B2A1908 		.word	135866939
 499              		.cfi_endproc
 500              	.LFE728:
 502              		.section	.text.HAL_FLASH_OB_Lock,"ax",%progbits
 503              		.align	1
 504              		.global	HAL_FLASH_OB_Lock
 505              		.syntax unified
 506              		.thumb
 507              		.thumb_func
 509              	HAL_FLASH_OB_Lock:
 510              	.LFB729:
 531:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 511              		.loc 1 531 1 is_stmt 1 view -0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515              		@ link register save eliminated.
 532:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 516              		.loc 1 532 3 view .LVU153
 517              	.LVL29:
 536:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 518              		.loc 1 536 3 view .LVU154
 519 0000 054B     		ldr	r3, .L44
 520 0002 5A69     		ldr	r2, [r3, #20]
 521 0004 42F08042 		orr	r2, r2, #1073741824
 522 0008 5A61     		str	r2, [r3, #20]
 539:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 523              		.loc 1 539 3 view .LVU155
 539:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 524              		.loc 1 539 7 is_stmt 0 view .LVU156
 525 000a 5869     		ldr	r0, [r3, #20]
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 47


 526              	.LVL30:
 544:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 527              		.loc 1 544 3 is_stmt 1 view .LVU157
 539:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 528              		.loc 1 539 6 is_stmt 0 view .LVU158
 529 000c 80F08040 		eor	r0, r0, #1073741824
 530              	.LVL31:
 545:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 531              		.loc 1 545 1 view .LVU159
 532 0010 C0F38070 		ubfx	r0, r0, #30, #1
 533              	.LVL32:
 545:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 534              		.loc 1 545 1 view .LVU160
 535 0014 7047     		bx	lr
 536              	.L45:
 537 0016 00BF     		.align	2
 538              	.L44:
 539 0018 00400058 		.word	1476411392
 540              		.cfi_endproc
 541              	.LFE729:
 543              		.section	.text.HAL_FLASH_OB_Launch,"ax",%progbits
 544              		.align	1
 545              		.global	HAL_FLASH_OB_Launch
 546              		.syntax unified
 547              		.thumb
 548              		.thumb_func
 550              	HAL_FLASH_OB_Launch:
 551              	.LFB730:
 552:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   /* Set the bit to force the option byte reloading */
 552              		.loc 1 552 1 is_stmt 1 view -0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 555:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 557              		.loc 1 555 3 view .LVU162
 558 0000 034A     		ldr	r2, .L47
 559 0002 5369     		ldr	r3, [r2, #20]
 560 0004 43F00063 		orr	r3, r3, #134217728
 561 0008 5361     		str	r3, [r2, #20]
 559:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 562              		.loc 1 559 3 view .LVU163
 560:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 563              		.loc 1 560 1 is_stmt 0 view .LVU164
 564 000a 0120     		movs	r0, #1
 565 000c 7047     		bx	lr
 566              	.L48:
 567 000e 00BF     		.align	2
 568              	.L47:
 569 0010 00400058 		.word	1476411392
 570              		.cfi_endproc
 571              	.LFE730:
 573              		.section	.text.HAL_FLASH_GetError,"ax",%progbits
 574              		.align	1
 575              		.global	HAL_FLASH_GetError
 576              		.syntax unified
 577              		.thumb
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 48


 578              		.thumb_func
 580              	HAL_FLASH_GetError:
 581              	.LFB731:
 596:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   return pFlash.ErrorCode;
 582              		.loc 1 596 1 is_stmt 1 view -0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              		@ link register save eliminated.
 597:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 587              		.loc 1 597 3 view .LVU166
 598:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 588              		.loc 1 598 1 is_stmt 0 view .LVU167
 589 0000 014B     		ldr	r3, .L50
 590 0002 5868     		ldr	r0, [r3, #4]
 591 0004 7047     		bx	lr
 592              	.L51:
 593 0006 00BF     		.align	2
 594              	.L50:
 595 0008 00000000 		.word	.LANCHOR0
 596              		.cfi_endproc
 597              	.LFE731:
 599              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 600              		.align	1
 601              		.global	FLASH_WaitForLastOperation
 602              		.syntax unified
 603              		.thumb
 604              		.thumb_func
 606              	FLASH_WaitForLastOperation:
 607              	.LVL33:
 608              	.LFB732:
 620:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 609              		.loc 1 620 1 is_stmt 1 view -0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 621:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
 613              		.loc 1 621 3 view .LVU169
 622:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 614              		.loc 1 622 3 view .LVU170
 620:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 615              		.loc 1 620 1 is_stmt 0 view .LVU171
 616 0000 70B5     		push	{r4, r5, r6, lr}
 617              	.LCFI2:
 618              		.cfi_def_cfa_offset 16
 619              		.cfi_offset 4, -16
 620              		.cfi_offset 5, -12
 621              		.cfi_offset 6, -8
 622              		.cfi_offset 14, -4
 620:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 623              		.loc 1 620 1 view .LVU172
 624 0002 0546     		mov	r5, r0
 622:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 625              		.loc 1 622 24 view .LVU173
 626 0004 FFF7FEFF 		bl	HAL_GetTick
 627              	.LVL34:
 627:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 49


 628              		.loc 1 627 10 view .LVU174
 629 0008 124E     		ldr	r6, .L66
 622:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 630              		.loc 1 622 24 view .LVU175
 631 000a 0446     		mov	r4, r0
 632              	.LVL35:
 627:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 633              		.loc 1 627 3 is_stmt 1 view .LVU176
 634              	.L53:
 627:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 635              		.loc 1 627 9 view .LVU177
 627:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 636              		.loc 1 627 10 is_stmt 0 view .LVU178
 637 000c 3369     		ldr	r3, [r6, #16]
 627:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 638              		.loc 1 627 9 view .LVU179
 639 000e D903     		lsls	r1, r3, #15
 640 0010 13D4     		bmi	.L55
 640:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #endif
 641              		.loc 1 640 3 is_stmt 1 view .LVU180
 640:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #endif
 642              		.loc 1 640 9 is_stmt 0 view .LVU181
 643 0012 3369     		ldr	r3, [r6, #16]
 644              	.LVL36:
 644:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 645              		.loc 1 644 3 is_stmt 1 view .LVU182
 644:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 646              		.loc 1 644 6 is_stmt 0 view .LVU183
 647 0014 DA07     		lsls	r2, r3, #31
 647:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 648              		.loc 1 647 5 is_stmt 1 view .LVU184
 647:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 649              		.loc 1 647 5 view .LVU185
 647:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 650              		.loc 1 647 5 view .LVU186
 647:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 651              		.loc 1 647 5 view .LVU187
 652 0016 44BF     		itt	mi
 653 0018 0122     		movmi	r2, #1
 654 001a 3261     		strmi	r2, [r6, #16]
 647:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 655              		.loc 1 647 5 view .LVU188
 651:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 656              		.loc 1 651 3 view .LVU189
 651:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 657              		.loc 1 651 9 is_stmt 0 view .LVU190
 658 001c 4CF2FA32 		movw	r2, #50170
 659              	.LVL37:
 654:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 660              		.loc 1 654 3 is_stmt 1 view .LVU191
 654:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 661              		.loc 1 654 3 view .LVU192
 654:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 662              		.loc 1 654 3 view .LVU193
 663 0020 1340     		ands	r3, r3, r2
 664              	.LVL38:
 654:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 50


 665              		.loc 1 654 3 is_stmt 0 view .LVU194
 666 0022 11D1     		bne	.L65
 665:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 667              		.loc 1 665 10 view .LVU195
 668 0024 0B4E     		ldr	r6, .L66
 669              	.LVL39:
 670              	.L57:
 665:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 671              		.loc 1 665 9 is_stmt 1 view .LVU196
 665:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 672              		.loc 1 665 10 is_stmt 0 view .LVU197
 673 0026 3069     		ldr	r0, [r6, #16]
 665:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 674              		.loc 1 665 9 view .LVU198
 675 0028 10F48020 		ands	r0, r0, #262144
 676 002c 0BD0     		beq	.L54
 667:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 677              		.loc 1 667 5 is_stmt 1 view .LVU199
 667:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 678              		.loc 1 667 10 is_stmt 0 view .LVU200
 679 002e FFF7FEFF 		bl	HAL_GetTick
 680              	.LVL40:
 667:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 681              		.loc 1 667 24 view .LVU201
 682 0032 001B     		subs	r0, r0, r4
 667:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 683              		.loc 1 667 8 view .LVU202
 684 0034 A842     		cmp	r0, r5
 685 0036 F6D3     		bcc	.L57
 686 0038 04E0     		b	.L58
 687              	.L55:
 629:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 688              		.loc 1 629 5 is_stmt 1 view .LVU203
 629:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 689              		.loc 1 629 10 is_stmt 0 view .LVU204
 690 003a FFF7FEFF 		bl	HAL_GetTick
 691              	.LVL41:
 629:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 692              		.loc 1 629 24 view .LVU205
 693 003e 001B     		subs	r0, r0, r4
 629:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 694              		.loc 1 629 8 view .LVU206
 695 0040 A842     		cmp	r0, r5
 696 0042 E3D3     		bcc	.L53
 697              	.L58:
 631:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     }
 698              		.loc 1 631 14 view .LVU207
 699 0044 0320     		movs	r0, #3
 700              	.L54:
 674:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 701              		.loc 1 674 1 view .LVU208
 702 0046 70BD     		pop	{r4, r5, r6, pc}
 703              	.LVL42:
 704              	.L65:
 654:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 705              		.loc 1 654 3 is_stmt 1 discriminator 4 view .LVU209
 706 0048 024A     		ldr	r2, .L66
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 51


 707 004a 1361     		str	r3, [r2, #16]
 654:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 708              		.loc 1 654 3 discriminator 4 view .LVU210
 656:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 709              		.loc 1 656 3 discriminator 4 view .LVU211
 659:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 710              		.loc 1 659 5 discriminator 4 view .LVU212
 659:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 711              		.loc 1 659 22 is_stmt 0 discriminator 4 view .LVU213
 712 004c 024A     		ldr	r2, .L66+4
 661:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 713              		.loc 1 661 12 discriminator 4 view .LVU214
 714 004e 0120     		movs	r0, #1
 659:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 715              		.loc 1 659 22 discriminator 4 view .LVU215
 716 0050 5360     		str	r3, [r2, #4]
 661:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 717              		.loc 1 661 5 is_stmt 1 discriminator 4 view .LVU216
 661:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 718              		.loc 1 661 12 is_stmt 0 discriminator 4 view .LVU217
 719 0052 F8E7     		b	.L54
 720              	.L67:
 721              		.align	2
 722              	.L66:
 723 0054 00400058 		.word	1476411392
 724 0058 00000000 		.word	.LANCHOR0
 725              		.cfi_endproc
 726              	.LFE732:
 728              		.section	.text.HAL_FLASH_Program,"ax",%progbits
 729              		.align	1
 730              		.global	HAL_FLASH_Program
 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 735              	HAL_FLASH_Program:
 736              	.LVL43:
 737              	.LFB721:
 179:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 738              		.loc 1 179 1 is_stmt 1 view -0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 179:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 742              		.loc 1 179 1 is_stmt 0 view .LVU219
 743 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 744              	.LCFI3:
 745              		.cfi_def_cfa_offset 24
 746              		.cfi_offset 4, -24
 747              		.cfi_offset 5, -20
 748              		.cfi_offset 6, -16
 749              		.cfi_offset 7, -12
 750              		.cfi_offset 8, -8
 751              		.cfi_offset 14, -4
 188:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 752              		.loc 1 188 3 view .LVU220
 753 0004 184D     		ldr	r5, .L74
 179:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 52


 754              		.loc 1 179 1 view .LVU221
 755 0006 9846     		mov	r8, r3
 188:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 756              		.loc 1 188 3 view .LVU222
 757 0008 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 758 000a 012B     		cmp	r3, #1
 179:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 759              		.loc 1 179 1 view .LVU223
 760 000c 0646     		mov	r6, r0
 761 000e 0C46     		mov	r4, r1
 180:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 762              		.loc 1 180 3 is_stmt 1 view .LVU224
 183:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_ADDR_ALIGNED_64BITS(Address));
 763              		.loc 1 183 3 view .LVU225
 184:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 764              		.loc 1 184 3 view .LVU226
 185:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 765              		.loc 1 185 3 view .LVU227
 188:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 766              		.loc 1 188 3 view .LVU228
 188:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 767              		.loc 1 188 3 view .LVU229
 179:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 768              		.loc 1 179 1 is_stmt 0 view .LVU230
 769 0010 1746     		mov	r7, r2
 188:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 770              		.loc 1 188 3 view .LVU231
 771 0012 26D0     		beq	.L73
 188:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 772              		.loc 1 188 3 is_stmt 1 discriminator 2 view .LVU232
 773 0014 0123     		movs	r3, #1
 774 0016 2B70     		strb	r3, [r5]
 188:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 775              		.loc 1 188 3 discriminator 2 view .LVU233
 191:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 776              		.loc 1 191 3 discriminator 2 view .LVU234
 194:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 777              		.loc 1 194 12 is_stmt 0 discriminator 2 view .LVU235
 778 0018 4FF47A70 		mov	r0, #1000
 779              	.LVL44:
 191:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 780              		.loc 1 191 20 discriminator 2 view .LVU236
 781 001c 0023     		movs	r3, #0
 782 001e 6B60     		str	r3, [r5, #4]
 194:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 783              		.loc 1 194 3 is_stmt 1 discriminator 2 view .LVU237
 194:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 784              		.loc 1 194 12 is_stmt 0 discriminator 2 view .LVU238
 785 0020 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 786              	.LVL45:
 196:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 787              		.loc 1 196 3 is_stmt 1 discriminator 2 view .LVU239
 196:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 788              		.loc 1 196 6 is_stmt 0 discriminator 2 view .LVU240
 789 0024 A0B9     		cbnz	r0, .L70
 198:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 790              		.loc 1 198 5 is_stmt 1 view .LVU241
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 53


 198:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 791              		.loc 1 198 8 is_stmt 0 view .LVU242
 792 0026 012E     		cmp	r6, #1
 793 0028 16D1     		bne	.L71
 201:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 794              		.loc 1 201 7 is_stmt 1 view .LVU243
 204:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     }
 795              		.loc 1 204 7 view .LVU244
 796              	.LVL46:
 797              	.LBB20:
 798              	.LBI20:
 682:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** {
 799              		.loc 1 682 13 view .LVU245
 800              	.LBB21:
 689:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #endif
 801              		.loc 1 689 3 view .LVU246
 802 002a 104A     		ldr	r2, .L74+4
 803 002c 5369     		ldr	r3, [r2, #20]
 804 002e 43F00103 		orr	r3, r3, #1
 805 0032 5361     		str	r3, [r2, #20]
 693:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 806              		.loc 1 693 3 view .LVU247
 693:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 807              		.loc 1 693 24 is_stmt 0 view .LVU248
 808 0034 2760     		str	r7, [r4]
 697:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 809              		.loc 1 697 3 is_stmt 1 view .LVU249
 810              	.LBB22:
 811              	.LBI22:
 258:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 812              		.loc 2 258 27 view .LVU250
 813              	.LBB23:
 260:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 814              		.loc 2 260 3 view .LVU251
 815              		.syntax unified
 816              	@ 260 "hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 817 0036 BFF36F8F 		isb 0xF
 818              	@ 0 "" 2
 819              		.thumb
 820              		.syntax unified
 821              	.LBE23:
 822              	.LBE22:
 700:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 823              		.loc 1 700 3 view .LVU252
 700:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 824              		.loc 1 700 33 is_stmt 0 view .LVU253
 825 003a C4F80480 		str	r8, [r4, #4]
 826              	.LVL47:
 827              	.L72:
 700:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 828              		.loc 1 700 33 view .LVU254
 829              	.LBE21:
 830              	.LBE20:
 216:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 831              		.loc 1 216 5 is_stmt 1 view .LVU255
 216:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 832              		.loc 1 216 14 is_stmt 0 view .LVU256
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 54


 833 003e 4FF47A70 		mov	r0, #1000
 834 0042 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 835              	.LVL48:
 222:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #endif
 836              		.loc 1 222 5 is_stmt 1 view .LVU257
 837 0046 094A     		ldr	r2, .L74+4
 838 0048 5369     		ldr	r3, [r2, #20]
 839 004a 23EA0606 		bic	r6, r3, r6
 840              	.LVL49:
 222:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #endif
 841              		.loc 1 222 5 is_stmt 0 view .LVU258
 842 004e 5661     		str	r6, [r2, #20]
 843              	.L70:
 227:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 844              		.loc 1 227 3 is_stmt 1 view .LVU259
 227:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 845              		.loc 1 227 3 view .LVU260
 846 0050 0023     		movs	r3, #0
 847 0052 2B70     		strb	r3, [r5]
 227:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 848              		.loc 1 227 3 view .LVU261
 230:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 849              		.loc 1 230 3 view .LVU262
 850              	.LVL50:
 851              	.L69:
 231:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 852              		.loc 1 231 1 is_stmt 0 view .LVU263
 853 0054 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 854              	.LVL51:
 855              	.L71:
 209:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 856              		.loc 1 209 7 is_stmt 1 view .LVU264
 212:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     }
 857              		.loc 1 212 7 view .LVU265
 858 0058 3946     		mov	r1, r7
 859 005a 2046     		mov	r0, r4
 860              	.LVL52:
 212:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     }
 861              		.loc 1 212 7 is_stmt 0 view .LVU266
 862 005c FFF7FEFF 		bl	FLASH_Program_Fast
 863              	.LVL53:
 864 0060 EDE7     		b	.L72
 865              	.LVL54:
 866              	.L73:
 188:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 867              		.loc 1 188 3 view .LVU267
 868 0062 0220     		movs	r0, #2
 869              	.LVL55:
 188:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 870              		.loc 1 188 3 view .LVU268
 871 0064 F6E7     		b	.L69
 872              	.L75:
 873 0066 00BF     		.align	2
 874              	.L74:
 875 0068 00000000 		.word	.LANCHOR0
 876 006c 00400058 		.word	1476411392
 877              		.cfi_endproc
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 55


 878              	.LFE721:
 880              		.section	.text.HAL_FLASH_Program_IT,"ax",%progbits
 881              		.align	1
 882              		.global	HAL_FLASH_Program_IT
 883              		.syntax unified
 884              		.thumb
 885              		.thumb_func
 887              	HAL_FLASH_Program_IT:
 888              	.LVL56:
 889              	.LFB722:
 247:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 890              		.loc 1 247 1 is_stmt 1 view -0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 0
 893              		@ frame_needed = 0, uses_anonymous_args = 0
 247:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 894              		.loc 1 247 1 is_stmt 0 view .LVU270
 895 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 896              	.LCFI4:
 897              		.cfi_def_cfa_offset 32
 898              		.cfi_offset 4, -32
 899              		.cfi_offset 5, -28
 900              		.cfi_offset 6, -24
 901              		.cfi_offset 7, -20
 902              		.cfi_offset 8, -16
 903              		.cfi_offset 9, -12
 904              		.cfi_offset 10, -8
 905              		.cfi_offset 14, -4
 256:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 906              		.loc 1 256 3 view .LVU271
 907 0004 1B4D     		ldr	r5, .L81
 247:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 908              		.loc 1 247 1 view .LVU272
 909 0006 9946     		mov	r9, r3
 256:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 910              		.loc 1 256 3 view .LVU273
 911 0008 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 912 000a 012B     		cmp	r3, #1
 247:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 913              		.loc 1 247 1 view .LVU274
 914 000c 8046     		mov	r8, r0
 915 000e 0C46     		mov	r4, r1
 248:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 916              		.loc 1 248 3 is_stmt 1 view .LVU275
 251:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_ADDR_ALIGNED_64BITS(Address));
 917              		.loc 1 251 3 view .LVU276
 252:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 918              		.loc 1 252 3 view .LVU277
 253:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 919              		.loc 1 253 3 view .LVU278
 256:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 920              		.loc 1 256 3 view .LVU279
 256:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 921              		.loc 1 256 3 view .LVU280
 247:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 922              		.loc 1 247 1 is_stmt 0 view .LVU281
 923 0010 1746     		mov	r7, r2
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 56


 256:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 924              		.loc 1 256 3 view .LVU282
 925 0012 2DD0     		beq	.L80
 256:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 926              		.loc 1 256 3 is_stmt 1 discriminator 2 view .LVU283
 927 0014 0123     		movs	r3, #1
 259:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 928              		.loc 1 259 20 is_stmt 0 discriminator 2 view .LVU284
 929 0016 4FF0000A 		mov	r10, #0
 262:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 930              		.loc 1 262 12 discriminator 2 view .LVU285
 931 001a 4FF47A70 		mov	r0, #1000
 932              	.LVL57:
 256:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 933              		.loc 1 256 3 discriminator 2 view .LVU286
 934 001e 2B70     		strb	r3, [r5]
 256:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 935              		.loc 1 256 3 is_stmt 1 discriminator 2 view .LVU287
 259:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 936              		.loc 1 259 3 discriminator 2 view .LVU288
 259:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 937              		.loc 1 259 20 is_stmt 0 discriminator 2 view .LVU289
 938 0020 C5F804A0 		str	r10, [r5, #4]
 262:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 939              		.loc 1 262 3 is_stmt 1 discriminator 2 view .LVU290
 262:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 940              		.loc 1 262 12 is_stmt 0 discriminator 2 view .LVU291
 941 0024 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 942              	.LVL58:
 264:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 943              		.loc 1 264 3 is_stmt 1 discriminator 2 view .LVU292
 264:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   {
 944              		.loc 1 264 6 is_stmt 0 discriminator 2 view .LVU293
 945 0028 0646     		mov	r6, r0
 946 002a 20B1     		cbz	r0, .L78
 267:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 947              		.loc 1 267 5 is_stmt 1 view .LVU294
 267:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 948              		.loc 1 267 5 view .LVU295
 949 002c 85F800A0 		strb	r10, [r5]
 267:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****   }
 950              		.loc 1 267 5 view .LVU296
 951              	.LVL59:
 952              	.L77:
 298:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 953              		.loc 1 298 1 is_stmt 0 view .LVU297
 954 0030 3046     		mov	r0, r6
 955 0032 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 956              	.LVL60:
 957              	.L78:
 272:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     pFlash.Address = Address;
 958              		.loc 1 272 5 is_stmt 1 view .LVU298
 273:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 959              		.loc 1 273 20 is_stmt 0 view .LVU299
 960 0036 C5E90284 		strd	r8, r4, [r5, #8]
 276:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 961              		.loc 1 276 5 is_stmt 1 view .LVU300
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 57


 276:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 962              		.loc 1 276 5 view .LVU301
 276:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 963              		.loc 1 276 5 view .LVU302
 964 003a 0F4D     		ldr	r5, .L81+4
 965 003c AB69     		ldr	r3, [r5, #24]
 966 003e 43F08073 		orr	r3, r3, #16777216
 967 0042 AB61     		str	r3, [r5, #24]
 276:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 968              		.loc 1 276 5 view .LVU303
 276:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 969              		.loc 1 276 5 view .LVU304
 970 0044 6B69     		ldr	r3, [r5, #20]
 278:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 971              		.loc 1 278 8 is_stmt 0 view .LVU305
 972 0046 B8F1010F 		cmp	r8, #1
 276:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 973              		.loc 1 276 5 view .LVU306
 974 004a 43F04073 		orr	r3, r3, #50331648
 975 004e 6B61     		str	r3, [r5, #20]
 276:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 976              		.loc 1 276 5 is_stmt 1 view .LVU307
 278:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 977              		.loc 1 278 5 view .LVU308
 278:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     {
 978              		.loc 1 278 8 is_stmt 0 view .LVU309
 979 0050 09D1     		bne	.L79
 281:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 980              		.loc 1 281 7 is_stmt 1 view .LVU310
 284:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     }
 981              		.loc 1 284 7 view .LVU311
 982              	.LVL61:
 983              	.LBB28:
 984              	.LBI28:
 682:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** {
 985              		.loc 1 682 13 view .LVU312
 986              	.LBB29:
 689:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** #endif
 987              		.loc 1 689 3 view .LVU313
 988 0052 6B69     		ldr	r3, [r5, #20]
 989 0054 43F00103 		orr	r3, r3, #1
 990 0058 6B61     		str	r3, [r5, #20]
 693:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 991              		.loc 1 693 3 view .LVU314
 693:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 992              		.loc 1 693 24 is_stmt 0 view .LVU315
 993 005a 2760     		str	r7, [r4]
 697:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 994              		.loc 1 697 3 is_stmt 1 view .LVU316
 995              	.LBB30:
 996              	.LBI30:
 258:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 997              		.loc 2 258 27 view .LVU317
 998              	.LBB31:
 260:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 999              		.loc 2 260 3 view .LVU318
 1000              		.syntax unified
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 58


 1001              	@ 260 "hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 1002 005c BFF36F8F 		isb 0xF
 1003              	@ 0 "" 2
 1004              		.thumb
 1005              		.syntax unified
 1006              	.LBE31:
 1007              	.LBE30:
 700:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 1008              		.loc 1 700 3 view .LVU319
 700:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** }
 1009              		.loc 1 700 33 is_stmt 0 view .LVU320
 1010 0060 C4F80490 		str	r9, [r4, #4]
 701:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 1011              		.loc 1 701 1 view .LVU321
 1012 0064 E4E7     		b	.L77
 1013              	.LVL62:
 1014              	.L79:
 701:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 1015              		.loc 1 701 1 view .LVU322
 1016              	.LBE29:
 1017              	.LBE28:
 289:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 1018              		.loc 1 289 7 is_stmt 1 view .LVU323
 292:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     }
 1019              		.loc 1 292 7 view .LVU324
 1020 0066 3946     		mov	r1, r7
 1021 0068 2046     		mov	r0, r4
 1022              	.LVL63:
 292:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c ****     }
 1023              		.loc 1 292 7 is_stmt 0 view .LVU325
 1024 006a FFF7FEFF 		bl	FLASH_Program_Fast
 1025              	.LVL64:
 1026 006e DFE7     		b	.L77
 1027              	.LVL65:
 1028              	.L80:
 256:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_flash.c **** 
 1029              		.loc 1 256 3 view .LVU326
 1030 0070 0226     		movs	r6, #2
 1031 0072 DDE7     		b	.L77
 1032              	.L82:
 1033              		.align	2
 1034              	.L81:
 1035 0074 00000000 		.word	.LANCHOR0
 1036 0078 00400058 		.word	1476411392
 1037              		.cfi_endproc
 1038              	.LFE722:
 1040              		.global	pFlash
 1041              		.section	.bss.pFlash,"aw",%nobits
 1042              		.align	2
 1043              		.set	.LANCHOR0,. + 0
 1046              	pFlash:
 1047 0000 00000000 		.space	24
 1047      00000000 
 1047      00000000 
 1047      00000000 
 1047      00000000 
 1048              		.text
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 59


 1049              	.Letext0:
 1050              		.file 3 "/Applications/ARM/arm-none-eabi/include/machine/_default_types.h"
 1051              		.file 4 "/Applications/ARM/arm-none-eabi/include/sys/_stdint.h"
 1052              		.file 5 "hardware/mcu/st/cmsis_device_wl/Include/stm32wle5xx.h"
 1053              		.file 6 "hardware/mcu/st/stm32wlxx_hal_driver/Inc/stm32wlxx_hal_def.h"
 1054              		.file 7 "hardware/mcu/st/stm32wlxx_hal_driver/Inc/stm32wlxx_hal_flash.h"
 1055              		.file 8 "hardware/mcu/st/stm32wlxx_hal_driver/Inc/stm32wlxx_hal.h"
 1056              		.file 9 "hardware/mcu/st/stm32wlxx_hal_driver/Inc/stm32wlxx_hal_flash_ex.h"
 1057              		.file 10 "hardware/mcu/st/stm32wlxx_hal_driver/Inc/stm32wlxx_ll_dma.h"
ARM GAS  /var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s 			page 60


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32wlxx_hal_flash.c
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:18     .text.FLASH_Program_Fast:0000000000000000 $t
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:23     .text.FLASH_Program_Fast:0000000000000000 FLASH_Program_Fast
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:136    .text.FLASH_Program_Fast:000000000000002c $d
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:141    .text.HAL_FLASH_EndOfOperationCallback:0000000000000000 $t
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:147    .text.HAL_FLASH_EndOfOperationCallback:0000000000000000 HAL_FLASH_EndOfOperationCallback
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:162    .text.HAL_FLASH_OperationErrorCallback:0000000000000000 $t
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:168    .text.HAL_FLASH_OperationErrorCallback:0000000000000000 HAL_FLASH_OperationErrorCallback
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:179    .text.HAL_FLASH_IRQHandler:0000000000000000 $t
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:185    .text.HAL_FLASH_IRQHandler:0000000000000000 HAL_FLASH_IRQHandler
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:359    .text.HAL_FLASH_IRQHandler:0000000000000098 $d
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:366    .text.HAL_FLASH_Unlock:0000000000000000 $t
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:372    .text.HAL_FLASH_Unlock:0000000000000000 HAL_FLASH_Unlock
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:408    .text.HAL_FLASH_Unlock:000000000000001c $d
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:414    .text.HAL_FLASH_Lock:0000000000000000 $t
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:420    .text.HAL_FLASH_Lock:0000000000000000 HAL_FLASH_Lock
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:450    .text.HAL_FLASH_Lock:0000000000000014 $d
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:455    .text.HAL_FLASH_OB_Unlock:0000000000000000 $t
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:461    .text.HAL_FLASH_OB_Unlock:0000000000000000 HAL_FLASH_OB_Unlock
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:497    .text.HAL_FLASH_OB_Unlock:0000000000000020 $d
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:503    .text.HAL_FLASH_OB_Lock:0000000000000000 $t
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:509    .text.HAL_FLASH_OB_Lock:0000000000000000 HAL_FLASH_OB_Lock
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:539    .text.HAL_FLASH_OB_Lock:0000000000000018 $d
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:544    .text.HAL_FLASH_OB_Launch:0000000000000000 $t
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:550    .text.HAL_FLASH_OB_Launch:0000000000000000 HAL_FLASH_OB_Launch
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:569    .text.HAL_FLASH_OB_Launch:0000000000000010 $d
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:574    .text.HAL_FLASH_GetError:0000000000000000 $t
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:580    .text.HAL_FLASH_GetError:0000000000000000 HAL_FLASH_GetError
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:595    .text.HAL_FLASH_GetError:0000000000000008 $d
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:600    .text.FLASH_WaitForLastOperation:0000000000000000 $t
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:606    .text.FLASH_WaitForLastOperation:0000000000000000 FLASH_WaitForLastOperation
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:723    .text.FLASH_WaitForLastOperation:0000000000000054 $d
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:729    .text.HAL_FLASH_Program:0000000000000000 $t
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:735    .text.HAL_FLASH_Program:0000000000000000 HAL_FLASH_Program
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:875    .text.HAL_FLASH_Program:0000000000000068 $d
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:881    .text.HAL_FLASH_Program_IT:0000000000000000 $t
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:887    .text.HAL_FLASH_Program_IT:0000000000000000 HAL_FLASH_Program_IT
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:1035   .text.HAL_FLASH_Program_IT:0000000000000074 $d
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:1046   .bss.pFlash:0000000000000000 pFlash
/var/folders/b4/k4jbz0ms4wg23jtq0w6p483m0000gn/T//ccpPntHs.s:1042   .bss.pFlash:0000000000000000 $d

UNDEFINED SYMBOLS
FLASH_PageErase
HAL_GetTick
