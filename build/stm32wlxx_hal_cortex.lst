ARM GAS  /tmp/ccEqltOE.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32wlxx_hal_cortex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_NVIC_SetPriorityGrouping
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	HAL_NVIC_SetPriorityGrouping:
  25              	.LVL0:
  26              	.LFB721:
  27              		.file 1 "hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c"
   1:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
   2:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   ******************************************************************************
   3:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @file    stm32wlxx_hal_cortex.c
   4:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @author  MCD Application Team
   5:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   6:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *          This file provides firmware functions to manage the following
   7:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *          functionalities of the CORTEX:
   8:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *           + Initialization and Configuration functions
   9:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *           + Peripheral Control functions
  10:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *
  11:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   @verbatim
  12:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   ==============================================================================
  13:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                         ##### How to use this driver #####
  14:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   ==============================================================================
  15:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
  16:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     [..]
  17:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  18:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     ===========================================================
  19:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     [..]
  20:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  21:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     The Cortex-M4 exceptions are managed by CMSIS functions.
  22:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
  23:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping() function.
  24:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     (#) Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority().
  25:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     (#) Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ().
  26:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
  27:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ pre-emption is no more possible.
  28:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
  29:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
  30:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  31:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****         (+@) Lowest pre-emption priority
ARM GAS  /tmp/ccEqltOE.s 			page 2


  32:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****         (+@) Lowest sub priority
  33:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  34:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
  35:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     [..]
  36:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     *** How to configure Systick using CORTEX HAL driver ***
  37:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     ========================================================
  38:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     [..]
  39:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     Setup SysTick Timer for time base.
  40:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
  41:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config() function calls the SysTick_Config() function which
  42:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****        is a CMSIS function that:
  43:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  44:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x0F).
  45:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  46:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  47:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  48:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  49:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
  50:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  51:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****        __HAL_CORTEX_SYSTICKCLK_CONFIG(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  52:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The __HAL_CORTEX_SYSTICKCLK_CONFIG() macro is defined
  53:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****        inside the stm32wlxx_hal_cortex.h file.
  54:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
  55:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  56:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  57:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  58:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
  59:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  60:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
  61:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  62:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  63:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  64:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
  65:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   @endverbatim
  66:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   ******************************************************************************
  67:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
  68:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   The table below gives the allowed values of the pre-emption priority and subpriority according
  69:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   to the Priority Grouping configuration performed by HAL_NVIC_SetPriorityGrouping() function.
  70:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
  71:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     ===============================================================================================
  72:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****       NVIC_PriorityGroup   | NVIC_IRQChannelPreemptionPriority | NVIC_IRQChannelSubPriority  |     
  73:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     ===============================================================================================
  74:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****      NVIC_PRIORITYGROUP_0  |                0                  |            0-15             | 0 bi
  75:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                            |                                   |                             | 4 bi
  76:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  77:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****      NVIC_PRIORITYGROUP_1  |                0-1                |            0-7              | 1 bi
  78:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                            |                                   |                             | 3 bi
  79:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  80:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****      NVIC_PRIORITYGROUP_2  |                0-3                |            0-3              | 2 bi
  81:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                            |                                   |                             | 2 bi
  82:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  83:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****      NVIC_PRIORITYGROUP_3  |                0-7                |            0-1              | 3 bi
  84:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                            |                                   |                             | 1 bi
  85:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  86:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****      NVIC_PRIORITYGROUP_4  |                0-15               |            0                | 4 bi
  87:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                            |                                   |                             | 0 bi
  88:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     ===============================================================================================
ARM GAS  /tmp/ccEqltOE.s 			page 3


  89:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
  90:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   ******************************************************************************
  91:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @attention
  92:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *
  93:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  94:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * All rights reserved.</center></h2>
  95:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *
  96:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  97:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * the "License"; You may not use this file except in compliance with the
  98:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * License. You may obtain a copy of the License at:
  99:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *                       opensource.org/licenses/BSD-3-Clause
 100:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *
 101:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   ******************************************************************************
 102:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 103:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 104:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
 105:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** #include "stm32wlxx_hal.h"
 106:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 107:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /** @addtogroup STM32WLxx_HAL_Driver
 108:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @{
 109:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 110:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 111:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /** @addtogroup CORTEX
 112:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @{
 113:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 114:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 115:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
 116:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 117:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /* Private types -------------------------------------------------------------*/
 118:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
 119:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /* Private constants ---------------------------------------------------------*/
 120:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /* Private macros ------------------------------------------------------------*/
 121:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
 122:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
 123:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 124:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions
 125:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @{
 126:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 127:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 128:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 129:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions_Group1
 130:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *  @brief    Initialization and Configuration functions
 131:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *
 132:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** @verbatim
 133:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   ==============================================================================
 134:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****               ##### Initialization and Configuration functions #####
 135:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   ==============================================================================
 136:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     [..]
 137:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 138:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****       SysTick functionalities
 139:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 140:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** @endverbatim
 141:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @{
 142:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 143:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 144:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** #ifdef CORE_CM0PLUS
 145:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
ARM GAS  /tmp/ccEqltOE.s 			page 4


 146:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief  Sets the priority of an interrupt.
 147:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param IRQn External interrupt number .
 148:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 149:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to stm32wlxx.h file)
 150:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param PreemptPriority The preemption priority for the IRQn channel.
 151:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         This parameter can be a value between 0 and 3.
 152:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         A lower priority value indicates a higher priority
 153:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param SubPriority the subpriority level for the IRQ channel.
 154:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         with stm32wlxx devices, this parameter is a dummy value and it is ignored, because
 155:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         no subpriority supported in Cortex M0+ based products.
 156:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval None
 157:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 158:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 159:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
 160:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Check the parameters */
 161:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 162:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   NVIC_SetPriority(IRQn, PreemptPriority);
 163:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 164:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** #else
 165:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 166:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief  Set the priority grouping field (pre-emption priority and subpriority)
 167:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         using the required unlock sequence.
 168:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param  PriorityGroup The priority grouping bits length.
 169:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         This parameter can be one of the following values:
 170:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bit  for pre-emption priority,
 171:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *                                    4 bits for subpriority
 172:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bit  for pre-emption priority,
 173:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *                                    3 bits for subpriority
 174:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority,
 175:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *                                    2 bits for subpriority
 176:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority,
 177:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *                                    1 bit  for subpriority
 178:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority,
 179:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *                                    0 bit  for subpriority
 180:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible.
 181:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority.
 182:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval None
 183:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 184:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 185:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
  28              		.loc 1 185 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 186:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Check the parameters */
 187:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  33              		.loc 1 187 3 view .LVU1
 188:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 189:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 190:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
  34              		.loc 1 190 3 view .LVU2
  35              	.LBB20:
  36              	.LBI20:
  37              		.file 2 "hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h"
   1:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**************************************************************************//**
   2:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * @file     core_cm4.h
ARM GAS  /tmp/ccEqltOE.s 			page 5


   3:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * @version  V5.1.2
   5:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * @date     04. June 2021
   6:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  ******************************************************************************/
   7:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*
   8:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * Copyright (c) 2009-2020 Arm Limited. All rights reserved.
   9:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *
  10:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *
  12:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *
  16:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *
  18:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * limitations under the License.
  23:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
  24:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  25:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined (__clang__)
  28:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
  30:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  31:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  34:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #include <stdint.h>
  35:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  36:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifdef __cplusplus
  37:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  extern "C" {
  38:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
  39:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  40:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
  41:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  44:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  47:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  50:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
  53:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  54:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  55:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*******************************************************************************
  56:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *                 CMSIS definitions
  57:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  ******************************************************************************/
  58:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
  59:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup Cortex_M4
ARM GAS  /tmp/ccEqltOE.s 			page 6


  60:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
  61:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
  62:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  63:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #include "cmsis_version.h"
  64:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  65:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  71:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  73:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** */
  76:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
  81:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
  84:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
  85:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
  87:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  88:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined __ARM_FP
  90:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
  93:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
  96:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
  97:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
  99:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 100:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
 105:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
 108:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
 109:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 111:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 112:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
ARM GAS  /tmp/ccEqltOE.s 			page 7


 117:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
 120:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
 121:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 123:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 124:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
 129:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
 132:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
 133:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 135:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 136:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
 141:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
 144:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
 145:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 147:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 148:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
 153:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
 156:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
 157:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 159:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 160:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
 161:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 162:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 164:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 165:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifdef __cplusplus
 166:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
 167:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
 168:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 169:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 171:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 173:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
ARM GAS  /tmp/ccEqltOE.s 			page 8


 174:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 176:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifdef __cplusplus
 177:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  extern "C" {
 178:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
 179:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 180:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* check device defines and use defaults */
 181:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 186:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 187:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 191:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 192:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 196:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 197:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef __VTOR_PRESENT
 198:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __VTOR_PRESENT             1U
 199:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 200:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 201:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 202:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 203:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 204:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 205:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 206:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 207:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 208:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 209:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 210:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 211:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
 212:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 213:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 214:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 215:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 216:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 217:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 218:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 219:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 220:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** */
 221:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifdef __cplusplus
 222:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 223:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #else
 224:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 225:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
 226:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 227:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 228:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 229:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* following defines should be used for structure members */
 230:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
ARM GAS  /tmp/ccEqltOE.s 			page 9


 231:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 232:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 233:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 234:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 235:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 236:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 237:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 238:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*******************************************************************************
 239:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *                 Register Abstraction
 240:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   Core Register contain:
 241:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core Register
 242:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core NVIC Register
 243:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core SCB Register
 244:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core SysTick Register
 245:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core Debug Register
 246:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core MPU Register
 247:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core FPU Register
 248:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  ******************************************************************************/
 249:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 250:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 251:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 252:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** */
 253:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 254:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 255:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 256:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 257:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief      Core Register type definitions.
 258:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 259:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 260:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 261:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 262:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 263:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 264:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef union
 265:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 266:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   struct
 267:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 268:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 269:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 270:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 271:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 272:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 273:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 274:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 275:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 276:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 277:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 278:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } APSR_Type;
 279:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 280:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* APSR Register Definitions */
 281:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 282:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 283:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 284:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 285:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 286:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 287:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
ARM GAS  /tmp/ccEqltOE.s 			page 10


 288:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 289:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 290:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 291:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 292:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 293:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 294:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 295:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 296:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 297:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 298:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 299:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 300:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 301:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 302:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 303:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef union
 304:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 305:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   struct
 306:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 307:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 308:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 309:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 310:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 311:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } IPSR_Type;
 312:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 313:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* IPSR Register Definitions */
 314:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 315:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 316:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 317:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 318:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 319:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 320:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 321:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef union
 322:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 323:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   struct
 324:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 325:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 326:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 327:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 328:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 329:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 330:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 331:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 332:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 333:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 334:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 335:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 336:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 337:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 338:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 339:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } xPSR_Type;
 340:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 341:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* xPSR Register Definitions */
 342:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 343:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 344:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
ARM GAS  /tmp/ccEqltOE.s 			page 11


 345:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 346:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 347:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 348:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 349:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 350:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 351:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 352:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 353:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 354:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 355:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 356:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 357:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 358:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 359:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 360:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 361:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 362:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 363:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 364:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 365:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 366:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 367:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 368:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 369:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 370:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 371:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 372:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 373:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 374:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 375:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 376:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef union
 377:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 378:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   struct
 379:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 380:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 381:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 382:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 383:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 384:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 385:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 386:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } CONTROL_Type;
 387:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 388:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* CONTROL Register Definitions */
 389:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 390:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 391:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 392:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 393:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 394:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 395:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 396:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 397:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 398:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 399:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 400:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 401:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
ARM GAS  /tmp/ccEqltOE.s 			page 12


 402:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 403:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 404:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 405:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 406:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 407:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 408:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 409:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 410:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 411:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
 412:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 413:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 414:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 415:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 416:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED1[24U];
 417:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 418:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 419:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 420:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 421:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 422:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 423:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 424:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 425:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 426:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }  NVIC_Type;
 427:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 428:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 429:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 430:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 431:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 432:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 433:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 434:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 435:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 436:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 437:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 438:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 439:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 440:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 441:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 442:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 443:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 444:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 445:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
 446:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 447:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 448:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 449:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 450:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 451:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 452:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 453:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 454:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 455:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 456:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 457:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 458:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
ARM GAS  /tmp/ccEqltOE.s 			page 13


 459:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 460:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 461:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 462:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 463:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 464:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 465:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 466:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 467:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 468:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } SCB_Type;
 469:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 470:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 471:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 472:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 473:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 474:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 475:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 476:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 477:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 478:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 479:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 480:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 481:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 482:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 483:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 484:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 485:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 486:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 487:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 488:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 489:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 490:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 491:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 492:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 493:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 494:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 495:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 496:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 497:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 498:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 499:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 500:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 501:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 502:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 503:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 504:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 505:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 506:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 507:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 508:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 509:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 510:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 511:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 512:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 513:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 514:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 515:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
ARM GAS  /tmp/ccEqltOE.s 			page 14


 516:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 517:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 518:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 519:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 520:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 521:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 522:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 523:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 524:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 525:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 526:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 527:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 528:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 529:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 530:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 531:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 532:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 533:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 534:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 535:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 536:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 537:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 538:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 539:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 540:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 541:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 542:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 543:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 544:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 545:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 546:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 547:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 548:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 549:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 550:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 551:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 552:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 553:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 554:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 555:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 556:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 557:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 558:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 559:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 560:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 561:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 562:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 563:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 564:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 565:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 566:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 567:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 568:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 569:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 570:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 571:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 572:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
ARM GAS  /tmp/ccEqltOE.s 			page 15


 573:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 574:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 575:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 576:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 577:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 578:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 579:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 580:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 581:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 582:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 583:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 584:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 585:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 586:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 587:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 588:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 589:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 590:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 591:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 592:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 593:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 594:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 595:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 596:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 597:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 598:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 599:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 600:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 601:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 602:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 603:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 604:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 605:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 606:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 607:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 608:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 609:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 610:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 611:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 612:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 613:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 614:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 615:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 616:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 617:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 618:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 619:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 620:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 621:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 622:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 623:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 624:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 625:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 626:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 7U)                 /*!< SCB 
 627:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 628:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 629:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 5U)                 /*!< SCB 
ARM GAS  /tmp/ccEqltOE.s 			page 16


 630:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 631:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 632:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 4U)                 /*!< SCB 
 633:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 634:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 635:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 3U)                 /*!< SCB 
 636:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 637:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 638:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 1U)                 /*!< SCB 
 639:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 640:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 641:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 0U)                 /*!< SCB 
 642:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 643:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 644:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 645:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 646:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 647:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 648:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 649:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 650:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 651:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 652:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 653:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 654:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 655:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 656:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 657:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 658:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 659:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 660:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 661:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 662:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 663:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 664:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 665:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 666:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 667:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 668:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 669:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 670:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 671:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 672:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 673:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 674:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 675:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 676:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 677:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 678:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 679:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 680:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 681:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 682:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 683:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 684:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 685:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 686:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
ARM GAS  /tmp/ccEqltOE.s 			page 17


 687:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 688:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 689:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 690:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 691:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 692:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 693:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 694:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 695:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 696:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 697:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 698:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 699:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 700:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 701:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 702:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 703:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 704:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 705:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 706:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 707:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 708:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 709:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 710:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 711:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 712:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 713:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 714:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 715:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 716:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 717:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 718:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 719:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 720:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 721:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 722:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 723:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 724:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
 725:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 726:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 727:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 728:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 729:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } SCnSCB_Type;
 730:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 731:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 732:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 733:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 734:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 735:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 736:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 737:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 738:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 739:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 740:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 741:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 742:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 743:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
ARM GAS  /tmp/ccEqltOE.s 			page 18


 744:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 745:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 746:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 747:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 748:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 749:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 750:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 751:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 752:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 753:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 754:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 755:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 756:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 757:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 758:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 759:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 760:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 761:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 762:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 763:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 764:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
 765:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 766:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 767:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 768:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 769:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 770:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } SysTick_Type;
 771:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 772:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 773:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 774:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 775:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 776:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 777:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 778:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 779:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 780:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 781:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 782:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 783:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 784:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 785:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 786:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 787:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 788:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 789:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 790:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 791:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 792:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 793:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 794:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 795:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 796:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 797:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 798:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 799:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 800:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
ARM GAS  /tmp/ccEqltOE.s 			page 19


 801:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 802:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 803:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 804:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 805:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 806:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 807:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 808:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 809:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 810:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 811:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 812:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 813:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 814:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 815:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 816:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
 817:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 818:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __OM  union
 819:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 820:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 821:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 822:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 823:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 824:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 825:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 826:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 827:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 828:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 829:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 830:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED3[32U];
 831:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 832:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 833:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 834:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 835:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 836:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 837:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 838:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 839:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 840:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 841:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 842:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 843:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 844:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 845:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 846:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 847:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } ITM_Type;
 848:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 849:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 850:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 851:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 852:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 853:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 854:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 855:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 856:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 857:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
ARM GAS  /tmp/ccEqltOE.s 			page 20


 858:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 859:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 860:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 861:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 862:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 863:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 864:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 865:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 866:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 867:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 868:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 869:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 870:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 871:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 872:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 873:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 874:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 875:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 876:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 877:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 878:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 879:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 880:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 881:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 882:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 883:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 884:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 885:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 886:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 887:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 888:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 889:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 890:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 891:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 892:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 893:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 894:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 895:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 896:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 897:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 898:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 899:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 900:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 901:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 902:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 903:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 904:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
 905:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 906:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 907:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 908:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 909:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 910:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 911:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 912:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 913:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 914:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
ARM GAS  /tmp/ccEqltOE.s 			page 21


 915:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 916:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 917:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 918:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 919:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 920:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 921:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 922:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 923:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 924:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 925:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 926:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 927:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 928:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 929:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } DWT_Type;
 930:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 931:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT Control Register Definitions */
 932:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 933:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 934:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 935:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 936:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 937:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 938:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 939:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 940:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 941:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 942:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 943:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 944:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 945:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 946:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 947:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 948:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 949:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 950:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 951:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 952:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 953:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 954:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 955:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 956:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 957:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 958:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 959:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 960:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 961:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 962:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 963:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 964:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 965:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 966:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 967:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 968:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 969:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 970:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 971:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
ARM GAS  /tmp/ccEqltOE.s 			page 22


 972:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 973:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 974:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 975:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 976:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 977:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 978:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 979:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 980:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 981:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 982:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 983:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 984:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 985:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 986:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 987:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 988:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 989:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 990:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 991:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 992:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 993:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 994:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 995:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 996:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 997:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 998:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 999:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1000:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1001:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1002:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1003:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1004:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1005:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1006:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1007:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1008:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1009:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1010:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1011:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1012:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1013:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1014:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1015:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1016:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1017:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1018:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1019:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1020:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1021:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1022:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1023:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1024:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1025:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1026:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1027:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1028:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
ARM GAS  /tmp/ccEqltOE.s 			page 23


1029:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1030:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1031:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1032:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1033:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1034:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1035:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1036:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1037:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1038:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1039:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1040:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1041:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1042:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1043:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1044:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1045:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1046:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1047:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1048:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1049:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1050:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1051:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
1052:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1053:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1054:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1055:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1056:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1057:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1058:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1059:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1060:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1061:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1062:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1063:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1064:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1065:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1066:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1067:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1068:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1069:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1070:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1071:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1072:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1073:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1074:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1075:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1076:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1077:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } TPI_Type;
1078:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1079:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1080:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1081:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1082:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1083:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1084:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1085:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
ARM GAS  /tmp/ccEqltOE.s 			page 24


1086:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1087:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1088:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1089:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1090:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1091:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1092:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1093:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1094:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1095:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1096:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1097:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1098:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1099:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1100:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1101:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1102:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1103:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1104:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1105:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1106:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1107:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1108:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1109:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1110:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1111:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1112:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1113:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1114:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1115:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1116:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1117:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1118:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1119:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1120:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1121:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1122:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1123:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1124:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1125:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1126:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1127:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1128:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1129:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1130:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1131:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1132:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1133:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1134:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1135:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1136:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1137:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1138:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1139:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1140:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1141:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1142:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
ARM GAS  /tmp/ccEqltOE.s 			page 25


1143:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1144:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1145:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1146:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1147:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1148:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1149:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1150:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1151:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1152:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1153:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1154:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1155:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1156:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1157:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1158:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1159:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1160:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1161:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1162:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1163:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1164:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1165:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1166:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1167:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1168:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1169:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1170:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1171:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1172:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1173:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1174:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1175:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1176:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1177:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1178:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1179:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1180:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1181:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1182:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1183:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1184:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1185:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1186:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1187:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1188:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1189:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1190:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1191:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1192:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1193:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1194:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1195:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1196:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1197:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1198:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1199:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
ARM GAS  /tmp/ccEqltOE.s 			page 26


1200:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1201:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1202:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1203:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1204:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1205:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1206:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1207:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1208:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1209:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1210:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1211:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1212:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1213:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
1214:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1215:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1216:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1217:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1218:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1219:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1220:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1221:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1222:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1223:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1224:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1225:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1226:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } MPU_Type;
1227:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1228:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1229:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1230:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* MPU Type Register Definitions */
1231:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1232:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1233:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1234:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1235:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1236:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1237:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1238:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1239:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1240:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* MPU Control Register Definitions */
1241:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1242:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1243:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1244:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1245:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1246:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1247:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1248:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1249:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1250:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1251:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1252:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1253:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1254:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1255:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1256:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
ARM GAS  /tmp/ccEqltOE.s 			page 27


1257:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1258:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1259:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1260:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1261:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1262:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1263:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1264:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1265:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1266:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1267:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1268:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1269:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1270:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1271:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1272:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1273:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1274:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1275:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1276:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1277:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1278:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1279:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1280:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1281:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1282:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1283:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1284:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1285:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1286:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1287:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1288:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1289:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1290:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1291:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1292:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1293:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1294:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1295:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1296:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1297:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1298:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1299:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1300:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1301:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1302:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1303:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1304:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1305:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1306:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1307:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1308:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1309:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
1310:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1311:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1312:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1313:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
ARM GAS  /tmp/ccEqltOE.s 			page 28


1314:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1315:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1316:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1317:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1318:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } FPU_Type;
1319:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1320:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1321:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1322:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1323:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1324:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1325:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1326:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1327:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1328:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1329:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1330:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1331:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1332:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1333:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1334:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1335:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1336:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1337:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1338:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1339:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1340:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1341:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1342:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1343:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1344:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1345:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1346:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1347:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1348:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1349:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1350:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1351:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1352:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1353:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1354:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1355:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1356:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1357:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1358:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1359:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1360:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1361:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1362:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1363:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1364:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1365:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1366:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1367:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1368:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1369:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1370:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
ARM GAS  /tmp/ccEqltOE.s 			page 29


1371:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1372:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1373:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1374:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1375:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1376:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1377:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1378:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1379:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1380:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1381:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1382:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1383:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1384:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1385:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1386:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1387:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1388:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1389:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1390:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1391:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1392:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1393:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1394:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1395:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1396:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1397:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1398:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1399:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1400:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1401:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1402:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1403:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1404:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1405:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1406:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1407:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1408:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1409:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1410:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1411:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1412:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1413:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1414:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1415:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1416:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1417:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1418:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1419:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1420:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1421:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
1422:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1423:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1424:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1425:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1426:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1427:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } CoreDebug_Type;
ARM GAS  /tmp/ccEqltOE.s 			page 30


1428:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1429:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1430:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1431:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1432:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1433:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1434:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1435:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1436:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1437:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1438:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1439:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1440:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1441:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1442:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1443:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1444:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1445:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1446:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1447:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1448:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1449:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1450:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1451:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1452:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1453:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1454:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1455:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1456:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1457:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1458:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1459:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1460:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1461:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1462:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1463:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1464:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1465:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1466:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1467:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1468:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1469:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1470:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1471:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1472:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1473:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1474:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1475:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1476:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1477:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1478:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1479:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1480:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1481:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1482:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1483:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1484:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
ARM GAS  /tmp/ccEqltOE.s 			page 31


1485:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1486:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1487:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1488:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1489:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1490:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1491:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1492:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1493:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1494:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1495:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1496:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1497:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1498:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1499:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1500:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1501:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1502:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1503:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1504:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1505:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1506:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1507:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1508:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1509:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1510:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1511:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1512:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1513:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1514:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1515:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1516:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1517:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1518:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1519:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1520:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1521:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1522:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1523:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1524:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1525:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1526:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1527:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return           Masked and shifted value.
1528:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** */
1529:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1530:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1531:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1532:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1533:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1534:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1535:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1536:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** */
1537:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1538:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1539:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1540:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1541:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
ARM GAS  /tmp/ccEqltOE.s 			page 32


1542:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1543:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1544:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1545:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1546:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1547:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1548:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1549:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1550:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1551:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1552:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1553:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1554:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1555:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1556:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1557:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1558:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1559:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1560:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1561:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1562:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1563:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1564:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1565:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1566:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1567:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1568:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1569:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1570:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1571:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
1572:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1573:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1574:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1575:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1576:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} */
1577:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1578:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1579:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1580:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*******************************************************************************
1581:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1582:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   Core Function Interface contains:
1583:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core NVIC Functions
1584:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core SysTick Functions
1585:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core Debug Functions
1586:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core Register Access Functions
1587:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  ******************************************************************************/
1588:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1589:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1590:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** */
1591:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1592:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1593:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1594:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1595:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1596:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1597:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1598:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
ARM GAS  /tmp/ccEqltOE.s 			page 33


1599:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1600:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1601:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1602:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1603:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1604:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1605:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
1606:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1607:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #else
1608:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1609:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1610:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1611:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1612:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1613:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1614:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1615:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1616:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1617:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1618:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1619:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1620:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1621:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1622:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1623:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1624:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1625:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
1626:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1627:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #else
1628:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1629:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1630:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1631:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1632:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1633:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1634:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1635:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1636:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1637:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1638:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1639:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1640:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1641:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1642:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1643:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1644:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1645:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Set Priority Grouping
1646:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1647:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1648:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            Only values from 0..7 are used.
1649:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1650:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1651:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1652:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1653:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
  38              		.loc 2 1653 22 view .LVU3
  39              	.LBB21:
ARM GAS  /tmp/ccEqltOE.s 			page 34


1654:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1655:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t reg_value;
  40              		.loc 2 1655 3 view .LVU4
1656:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
  41              		.loc 2 1656 3 view .LVU5
1657:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1658:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
  42              		.loc 2 1658 3 view .LVU6
  43              		.loc 2 1658 14 is_stmt 0 view .LVU7
  44 0000 0749     		ldr	r1, .L2
  45 0002 CA68     		ldr	r2, [r1, #12]
  46              	.LVL1:
1659:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
  47              		.loc 2 1659 3 is_stmt 1 view .LVU8
1660:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  48              		.loc 2 1660 3 view .LVU9
1659:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
  49              		.loc 2 1659 13 is_stmt 0 view .LVU10
  50 0004 22F4E062 		bic	r2, r2, #1792
  51              	.LVL2:
1661:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1662:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
  52              		.loc 2 1662 35 view .LVU11
  53 0008 0302     		lsls	r3, r0, #8
1659:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  54              		.loc 2 1659 13 view .LVU12
  55 000a 1204     		lsls	r2, r2, #16
  56              		.loc 2 1662 35 view .LVU13
  57 000c 03F4E063 		and	r3, r3, #1792
1659:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  58              		.loc 2 1659 13 view .LVU14
  59 0010 120C     		lsrs	r2, r2, #16
1661:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
  60              		.loc 2 1661 62 view .LVU15
  61 0012 1343     		orrs	r3, r3, r2
1660:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  62              		.loc 2 1660 14 view .LVU16
  63 0014 43F0BF63 		orr	r3, r3, #100139008
  64 0018 43F40033 		orr	r3, r3, #131072
  65              	.LVL3:
1663:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
  66              		.loc 2 1663 3 is_stmt 1 view .LVU17
  67              		.loc 2 1663 14 is_stmt 0 view .LVU18
  68 001c CB60     		str	r3, [r1, #12]
  69              	.LVL4:
  70              		.loc 2 1663 14 view .LVU19
  71              	.LBE21:
  72              	.LBE20:
 191:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
  73              		.loc 1 191 1 view .LVU20
  74 001e 7047     		bx	lr
  75              	.L3:
  76              		.align	2
  77              	.L2:
  78 0020 00ED00E0 		.word	-536810240
  79              		.cfi_endproc
  80              	.LFE721:
ARM GAS  /tmp/ccEqltOE.s 			page 35


  82              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
  83              		.align	1
  84              		.global	HAL_NVIC_SetPriority
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  89              	HAL_NVIC_SetPriority:
  90              	.LVL5:
  91              	.LFB722:
 192:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 193:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 194:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief  Set the priority of an interrupt.
 195:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param IRQn External interrupt number.
 196:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 197:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer
 198:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *          to the appropriate CMSIS device file (stm32wlxxxx.h))
 199:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param PreemptPriority The pre-emption priority for the IRQn channel.
 200:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 201:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         A lower priority value indicates a higher priority
 202:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param SubPriority the subpriority level for the IRQ channel.
 203:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 204:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.
 205:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval None
 206:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 207:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 208:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
  92              		.loc 1 208 1 is_stmt 1 view -0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
 209:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   uint32_t prioritygroup;
  96              		.loc 1 209 3 view .LVU22
 210:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 211:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Check the parameters */
 212:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  97              		.loc 1 212 3 view .LVU23
 213:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  98              		.loc 1 213 3 view .LVU24
 214:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 215:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
  99              		.loc 1 215 3 view .LVU25
 100              	.LBB28:
 101              	.LBI28:
1664:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1665:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1666:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1667:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1668:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Get Priority Grouping
1669:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1670:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1671:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1672:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
 102              		.loc 2 1672 26 view .LVU26
 103              	.LBB29:
1673:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1674:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 104              		.loc 2 1674 3 view .LVU27
ARM GAS  /tmp/ccEqltOE.s 			page 36


 105              		.loc 2 1674 26 is_stmt 0 view .LVU28
 106 0000 164B     		ldr	r3, .L9
 107              	.LBE29:
 108              	.LBE28:
 208:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   uint32_t prioritygroup;
 109              		.loc 1 208 1 view .LVU29
 110 0002 30B5     		push	{r4, r5, lr}
 111              	.LCFI0:
 112              		.cfi_def_cfa_offset 12
 113              		.cfi_offset 4, -12
 114              		.cfi_offset 5, -8
 115              		.cfi_offset 14, -4
 116              	.LBB31:
 117              	.LBB30:
 118              		.loc 2 1674 26 view .LVU30
 119 0004 DC68     		ldr	r4, [r3, #12]
 120              		.loc 2 1674 11 view .LVU31
 121 0006 C4F30224 		ubfx	r4, r4, #8, #3
 122              	.LVL6:
 123              		.loc 2 1674 11 view .LVU32
 124              	.LBE30:
 125              	.LBE31:
 216:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 217:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 126              		.loc 1 217 3 is_stmt 1 view .LVU33
 127              	.LBB32:
 128              	.LBI32:
1675:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1676:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1677:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1678:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1679:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Enable Interrupt
1680:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1681:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1682:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1683:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1684:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1685:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1686:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1687:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1688:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __COMPILER_BARRIER();
1689:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1690:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __COMPILER_BARRIER();
1691:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1692:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1693:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1694:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1695:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1696:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1697:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1698:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1699:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1700:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1701:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1702:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1703:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1704:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
ARM GAS  /tmp/ccEqltOE.s 			page 37


1705:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1706:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1707:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1708:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1709:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   else
1710:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1711:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return(0U);
1712:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1713:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1714:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1715:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1716:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1717:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Disable Interrupt
1718:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1719:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1720:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1721:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1722:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1723:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1724:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1725:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1726:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1727:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __DSB();
1728:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __ISB();
1729:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1730:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1731:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1732:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1733:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1734:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1735:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1736:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1737:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1738:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1739:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1740:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1741:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1742:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1743:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1744:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1745:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1746:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1747:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   else
1748:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1749:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return(0U);
1750:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1751:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1752:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1753:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1754:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1755:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1756:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1757:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1758:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1759:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1760:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1761:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
ARM GAS  /tmp/ccEqltOE.s 			page 38


1762:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1763:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1764:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1765:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1766:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1767:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1768:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1769:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1770:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1771:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1772:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1773:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1774:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1775:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1776:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1777:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1778:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1779:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1780:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1781:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1782:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1783:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1784:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1785:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Get Active Interrupt
1786:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1787:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1788:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1789:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1790:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1791:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1792:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1793:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1794:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1795:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1796:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1797:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1798:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   else
1799:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1800:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return(0U);
1801:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1802:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1803:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1804:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1805:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1806:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1807:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1808:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1809:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            or negative to specify a processor exception.
1810:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1811:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1812:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1813:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1814:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1815:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1816:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1817:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1818:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
ARM GAS  /tmp/ccEqltOE.s 			page 39


1819:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1820:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   else
1821:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1822:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1823:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1824:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1825:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1826:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1827:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1828:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1829:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1830:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1831:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            or negative to specify a processor exception.
1832:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1833:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return             Interrupt Priority.
1834:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1835:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1836:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1837:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1838:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1839:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1840:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1841:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1842:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1843:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   else
1844:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1845:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1846:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1847:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1848:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1849:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1850:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1851:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Encode Priority
1852:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1853:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1854:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1855:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1856:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1857:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1858:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1859:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1860:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1861:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
 129              		.loc 2 1861 26 view .LVU34
 130              	.LBB33:
1862:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1863:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 131              		.loc 2 1863 3 view .LVU35
1864:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 132              		.loc 2 1864 3 view .LVU36
1865:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 133              		.loc 2 1865 3 view .LVU37
1866:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1867:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 134              		.loc 2 1867 3 view .LVU38
 135              		.loc 2 1867 31 is_stmt 0 view .LVU39
 136 000a C4F10703 		rsb	r3, r4, #7
ARM GAS  /tmp/ccEqltOE.s 			page 40


1868:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 137              		.loc 2 1868 44 view .LVU40
 138 000e 251D     		adds	r5, r4, #4
1867:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 139              		.loc 2 1867 23 view .LVU41
 140 0010 042B     		cmp	r3, #4
 141 0012 28BF     		it	cs
 142 0014 0423     		movcs	r3, #4
 143              	.LVL7:
 144              		.loc 2 1868 3 is_stmt 1 view .LVU42
 145              		.loc 2 1868 109 is_stmt 0 view .LVU43
 146 0016 062D     		cmp	r5, #6
1869:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1870:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   return (
1871:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 147              		.loc 2 1871 30 view .LVU44
 148 0018 4FF0FF35 		mov	r5, #-1
 149 001c 05FA03F3 		lsl	r3, r5, r3
 150              	.LVL8:
1868:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 151              		.loc 2 1868 109 view .LVU45
 152 0020 8CBF     		ite	hi
 153 0022 033C     		subhi	r4, r4, #3
 154              	.LVL9:
1868:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 155              		.loc 2 1868 109 view .LVU46
 156 0024 0024     		movls	r4, #0
 157              	.LVL10:
1870:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 158              		.loc 2 1870 3 is_stmt 1 view .LVU47
1870:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 159              		.loc 2 1870 3 is_stmt 0 view .LVU48
 160              	.LBE33:
 161              	.LBE32:
 162              	.LBB36:
 163              	.LBI36:
1814:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 164              		.loc 2 1814 22 is_stmt 1 view .LVU49
 165              	.LBB37:
1816:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 166              		.loc 2 1816 3 view .LVU50
 167              	.LBE37:
 168              	.LBE36:
 169              	.LBB40:
 170              	.LBB34:
 171              		.loc 2 1871 30 is_stmt 0 view .LVU51
 172 0026 21EA0303 		bic	r3, r1, r3
 173              		.loc 2 1871 82 view .LVU52
 174 002a A340     		lsls	r3, r3, r4
1872:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 175              		.loc 2 1872 30 view .LVU53
 176 002c 05FA04F4 		lsl	r4, r5, r4
 177              	.LVL11:
 178              		.loc 2 1872 30 view .LVU54
 179 0030 22EA0402 		bic	r2, r2, r4
 180              	.LVL12:
 181              		.loc 2 1872 30 view .LVU55
ARM GAS  /tmp/ccEqltOE.s 			page 41


 182              	.LBE34:
 183              	.LBE40:
 184              	.LBB41:
 185              	.LBB38:
1816:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 186              		.loc 2 1816 6 view .LVU56
 187 0034 0028     		cmp	r0, #0
1818:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 188              		.loc 2 1818 5 is_stmt 1 view .LVU57
 189              	.LBE38:
 190              	.LBE41:
 191              	.LBB42:
 192              	.LBB35:
1871:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 193              		.loc 2 1871 102 is_stmt 0 view .LVU58
 194 0036 43EA0203 		orr	r3, r3, r2
 195              	.LBE35:
 196              	.LBE42:
 197              	.LBB43:
 198              	.LBB39:
1818:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 199              		.loc 2 1818 46 view .LVU59
 200 003a ACBF     		ite	ge
 201 003c 00F16040 		addge	r0, r0, #-536870912
 202              	.LVL13:
1822:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 203              		.loc 2 1822 46 view .LVU60
 204 0040 074A     		ldrlt	r2, .L9+4
1818:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 205              		.loc 2 1818 48 view .LVU61
 206 0042 4FEA0313 		lsl	r3, r3, #4
1822:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 207              		.loc 2 1822 32 view .LVU62
 208 0046 B8BF     		it	lt
 209 0048 00F00F00 		andlt	r0, r0, #15
1818:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 210              		.loc 2 1818 48 view .LVU63
 211 004c DBB2     		uxtb	r3, r3
1818:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 212              		.loc 2 1818 46 view .LVU64
 213 004e AABF     		itet	ge
 214 0050 00F56140 		addge	r0, r0, #57600
1822:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 215              		.loc 2 1822 46 view .LVU65
 216 0054 1354     		strblt	r3, [r2, r0]
1818:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 217              		.loc 2 1818 46 view .LVU66
 218 0056 80F80033 		strbge	r3, [r0, #768]
1822:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 219              		.loc 2 1822 5 is_stmt 1 view .LVU67
 220              	.LVL14:
1822:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 221              		.loc 2 1822 5 is_stmt 0 view .LVU68
 222              	.LBE39:
 223              	.LBE43:
 218:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 224              		.loc 1 218 1 view .LVU69
ARM GAS  /tmp/ccEqltOE.s 			page 42


 225 005a 30BD     		pop	{r4, r5, pc}
 226              	.L10:
 227              		.align	2
 228              	.L9:
 229 005c 00ED00E0 		.word	-536810240
 230 0060 14ED00E0 		.word	-536810220
 231              		.cfi_endproc
 232              	.LFE722:
 234              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 235              		.align	1
 236              		.global	HAL_NVIC_EnableIRQ
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 241              	HAL_NVIC_EnableIRQ:
 242              	.LVL15:
 243              	.LFB723:
 219:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** #endif /* CORE_CM0PLUS */
 220:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 221:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 222:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief  Enable a device specific interrupt in the NVIC interrupt controller.
 223:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 224:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         function should be called before.
 225:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 226:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 227:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer
 228:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *          to the appropriate CMSIS device file (stm32wlxxxx.h))
 229:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval None
 230:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 231:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 232:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
 244              		.loc 1 232 1 is_stmt 1 view -0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 233:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Check the parameters */
 234:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 249              		.loc 1 234 3 view .LVU71
 235:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 236:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Enable interrupt */
 237:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 250              		.loc 1 237 3 view .LVU72
 251              	.LBB46:
 252              	.LBI46:
1684:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 253              		.loc 2 1684 22 view .LVU73
 254              	.LBB47:
1686:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 255              		.loc 2 1686 3 view .LVU74
1686:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 256              		.loc 2 1686 6 is_stmt 0 view .LVU75
 257 0000 0028     		cmp	r0, #0
 258              	.LVL16:
1686:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 259              		.loc 2 1686 6 view .LVU76
 260 0002 08DB     		blt	.L11
ARM GAS  /tmp/ccEqltOE.s 			page 43


1688:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 261              		.loc 2 1688 5 is_stmt 1 view .LVU77
1689:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __COMPILER_BARRIER();
 262              		.loc 2 1689 5 view .LVU78
1689:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __COMPILER_BARRIER();
 263              		.loc 2 1689 45 is_stmt 0 view .LVU79
 264 0004 0123     		movs	r3, #1
1689:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __COMPILER_BARRIER();
 265              		.loc 2 1689 34 view .LVU80
 266 0006 4209     		lsrs	r2, r0, #5
1689:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __COMPILER_BARRIER();
 267              		.loc 2 1689 81 view .LVU81
 268 0008 00F01F00 		and	r0, r0, #31
1689:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __COMPILER_BARRIER();
 269              		.loc 2 1689 45 view .LVU82
 270 000c 03FA00F0 		lsl	r0, r3, r0
1689:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __COMPILER_BARRIER();
 271              		.loc 2 1689 43 view .LVU83
 272 0010 014B     		ldr	r3, .L13
 273 0012 43F82200 		str	r0, [r3, r2, lsl #2]
1690:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 274              		.loc 2 1690 5 is_stmt 1 view .LVU84
 275              	.LVL17:
 276              	.L11:
1690:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 277              		.loc 2 1690 5 is_stmt 0 view .LVU85
 278              	.LBE47:
 279              	.LBE46:
 238:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 280              		.loc 1 238 1 view .LVU86
 281 0016 7047     		bx	lr
 282              	.L14:
 283              		.align	2
 284              	.L13:
 285 0018 00E100E0 		.word	-536813312
 286              		.cfi_endproc
 287              	.LFE723:
 289              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 290              		.align	1
 291              		.global	HAL_NVIC_DisableIRQ
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 296              	HAL_NVIC_DisableIRQ:
 297              	.LVL18:
 298              	.LFB724:
 239:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 240:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 241:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief  Disable a device specific interrupt in the NVIC interrupt controller.
 242:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 243:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 244:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer
 245:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *          to the appropriate CMSIS device file (stm32wlxxxx.h))
 246:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval None
 247:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 248:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 249:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
ARM GAS  /tmp/ccEqltOE.s 			page 44


 299              		.loc 1 249 1 is_stmt 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 250:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Check the parameters */
 251:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 304              		.loc 1 251 3 view .LVU88
 252:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 253:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Disable interrupt */
 254:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 305              		.loc 1 254 3 view .LVU89
 306              	.LBB54:
 307              	.LBI54:
1722:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 308              		.loc 2 1722 22 view .LVU90
 309              	.LBB55:
1724:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 310              		.loc 2 1724 3 view .LVU91
1724:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 311              		.loc 2 1724 6 is_stmt 0 view .LVU92
 312 0000 0028     		cmp	r0, #0
 313              	.LVL19:
1724:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 314              		.loc 2 1724 6 view .LVU93
 315 0002 0DDB     		blt	.L15
1726:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __DSB();
 316              		.loc 2 1726 5 is_stmt 1 view .LVU94
1726:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __DSB();
 317              		.loc 2 1726 34 is_stmt 0 view .LVU95
 318 0004 4309     		lsrs	r3, r0, #5
1726:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __DSB();
 319              		.loc 2 1726 45 view .LVU96
 320 0006 0122     		movs	r2, #1
1726:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __DSB();
 321              		.loc 2 1726 81 view .LVU97
 322 0008 00F01F00 		and	r0, r0, #31
1726:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __DSB();
 323              		.loc 2 1726 45 view .LVU98
 324 000c 02FA00F0 		lsl	r0, r2, r0
1726:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __DSB();
 325              		.loc 2 1726 43 view .LVU99
 326 0010 2033     		adds	r3, r3, #32
 327 0012 044A     		ldr	r2, .L17
 328 0014 42F82300 		str	r0, [r2, r3, lsl #2]
1727:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __ISB();
 329              		.loc 2 1727 5 is_stmt 1 view .LVU100
 330              	.LBB56:
 331              	.LBI56:
 332              		.file 3 "hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h"
   1:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /*
ARM GAS  /tmp/ccEqltOE.s 			page 45


   8:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  52:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
ARM GAS  /tmp/ccEqltOE.s 			page 46


  65:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 119:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 120:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccEqltOE.s 			page 47


 122:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            in the used linker script.
 129:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 130:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 131:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 133:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 136:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 141:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   typedef struct {
 142:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 151:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     }
 155:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 156:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 157:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****     }
 161:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   }
 162:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 163:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   _start();
 164:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 165:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 166:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 168:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 169:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 172:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 173:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 176:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 177:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
ARM GAS  /tmp/ccEqltOE.s 			page 48


 179:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 180:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 181:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 184:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 185:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 189:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 190:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 193:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 194:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 197:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 198:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 202:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 203:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 204:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 205:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 209:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** */
 210:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 211:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #else
 219:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 223:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 224:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 225:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 226:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 228:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 230:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 231:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 234:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccEqltOE.s 			page 49


 236:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 238:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 242:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 244:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 245:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 246:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 247:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 249:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 252:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 253:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 258:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 260:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 262:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 263:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 264:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 265:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 269:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 333              		.loc 3 269 27 view .LVU101
 334              	.LBB57:
 270:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 271:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 335              		.loc 3 271 3 view .LVU102
 336              		.syntax unified
 337              	@ 271 "hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 338 0018 BFF34F8F 		dsb 0xF
 339              	@ 0 "" 2
 340              		.thumb
 341              		.syntax unified
 342              	.LBE57:
 343              	.LBE56:
1728:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 344              		.loc 2 1728 5 view .LVU103
 345              	.LBB58:
 346              	.LBI58:
 258:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 347              		.loc 3 258 27 view .LVU104
 348              	.LBB59:
 260:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 349              		.loc 3 260 3 view .LVU105
 350              		.syntax unified
ARM GAS  /tmp/ccEqltOE.s 			page 50


 351              	@ 260 "hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 352 001c BFF36F8F 		isb 0xF
 353              	@ 0 "" 2
 354              	.LVL20:
 355              		.thumb
 356              		.syntax unified
 357              	.L15:
 260:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 358              		.loc 3 260 3 is_stmt 0 view .LVU106
 359              	.LBE59:
 360              	.LBE58:
 361              	.LBE55:
 362              	.LBE54:
 255:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 363              		.loc 1 255 1 view .LVU107
 364 0020 7047     		bx	lr
 365              	.L18:
 366 0022 00BF     		.align	2
 367              	.L17:
 368 0024 00E100E0 		.word	-536813312
 369              		.cfi_endproc
 370              	.LFE724:
 372              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 373              		.align	1
 374              		.global	HAL_NVIC_SystemReset
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 379              	HAL_NVIC_SystemReset:
 380              	.LFB725:
 256:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 257:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 258:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief  Initiate a system reset request to reset the MCU.
 259:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval None
 260:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 261:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 262:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
 381              		.loc 1 262 1 is_stmt 1 view -0
 382              		.cfi_startproc
 383              		@ Volatile: function does not return.
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 263:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* System Reset */
 264:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   NVIC_SystemReset();
 387              		.loc 1 264 3 view .LVU109
 388              	.LBB66:
 389              	.LBI66:
1873:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****          );
1874:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1875:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1876:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1877:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1878:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Decode Priority
1879:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1880:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1881:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
ARM GAS  /tmp/ccEqltOE.s 			page 51


1882:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1883:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1884:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1885:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1886:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1887:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1888:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1889:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1890:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1891:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1892:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1893:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1894:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1895:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1896:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1897:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1898:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1899:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1900:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1901:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1902:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1903:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Set Interrupt Vector
1904:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1905:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1906:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            or negative to specify a processor exception.
1907:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            VTOR must been relocated to SRAM before.
1908:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1909:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1910:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1911:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1912:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1913:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1914:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
1915:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   /* ARM Application Note 321 states that the M4 does not require the architectural barrier */
1916:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1917:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1918:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1919:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1920:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Get Interrupt Vector
1921:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1922:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1923:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            or negative to specify a processor exception.
1924:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1925:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return                 Address of interrupt handler function
1926:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1927:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1928:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1929:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1930:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
1931:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1932:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1933:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1934:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1935:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   System Reset
1936:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1937:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1938:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
ARM GAS  /tmp/ccEqltOE.s 			page 52


 390              		.loc 2 1938 34 view .LVU110
 391              	.LBB67:
1939:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1940:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
 392              		.loc 2 1940 3 view .LVU111
 393              	.LBB68:
 394              	.LBI68:
 269:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 395              		.loc 3 269 27 view .LVU112
 396              	.LBB69:
 397              		.loc 3 271 3 view .LVU113
 398              		.syntax unified
 399              	@ 271 "hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 400 0000 BFF34F8F 		dsb 0xF
 401              	@ 0 "" 2
 402              		.thumb
 403              		.syntax unified
 404              	.LBE69:
 405              	.LBE68:
1941:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                                                                        buffered write are completed
1942:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 406              		.loc 2 1942 3 view .LVU114
1943:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 407              		.loc 2 1943 32 is_stmt 0 view .LVU115
 408 0004 0549     		ldr	r1, .L21
1942:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 409              		.loc 2 1942 17 view .LVU116
 410 0006 064B     		ldr	r3, .L21+4
 411              		.loc 2 1943 32 view .LVU117
 412 0008 CA68     		ldr	r2, [r1, #12]
 413              		.loc 2 1943 40 view .LVU118
 414 000a 02F4E062 		and	r2, r2, #1792
1942:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 415              		.loc 2 1942 17 view .LVU119
 416 000e 1343     		orrs	r3, r3, r2
1942:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 417              		.loc 2 1942 15 view .LVU120
 418 0010 CB60     		str	r3, [r1, #12]
1944:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1945:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
 419              		.loc 2 1945 3 is_stmt 1 view .LVU121
 420              	.LBB70:
 421              	.LBI70:
 269:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 422              		.loc 3 269 27 view .LVU122
 423              	.LBB71:
 424              		.loc 3 271 3 view .LVU123
 425              		.syntax unified
 426              	@ 271 "hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 427 0012 BFF34F8F 		dsb 0xF
 428              	@ 0 "" 2
 429              		.thumb
 430              		.syntax unified
 431              	.L20:
 432              	.LBE71:
 433              	.LBE70:
1946:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
ARM GAS  /tmp/ccEqltOE.s 			page 53


1947:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
 434              		.loc 2 1947 3 view .LVU124
1948:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1949:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __NOP();
 435              		.loc 2 1949 5 view .LVU125
 436              		.syntax unified
 437              	@ 1949 "hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h" 1
 438 0016 00BF     		nop
 439              	@ 0 "" 2
1947:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 440              		.loc 2 1947 8 view .LVU126
 441              		.thumb
 442              		.syntax unified
 443 0018 FDE7     		b	.L20
 444              	.L22:
 445 001a 00BF     		.align	2
 446              	.L21:
 447 001c 00ED00E0 		.word	-536810240
 448 0020 0400FA05 		.word	100270084
 449              	.LBE67:
 450              	.LBE66:
 451              		.cfi_endproc
 452              	.LFE725:
 454              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 455              		.align	1
 456              		.global	HAL_SYSTICK_Config
 457              		.syntax unified
 458              		.thumb
 459              		.thumb_func
 461              	HAL_SYSTICK_Config:
 462              	.LVL21:
 463              	.LFB726:
 265:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 266:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 267:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 268:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief  Initialize the System Timer with interrupt enabled and start the System Tick Timer (Sys
 269:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 270:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param TicksNumb Specifies the ticks Number of ticks between two interrupts.
 271:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval status:  - 0  Function succeeded.
 272:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *                  - 1  Function failed.
 273:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 274:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 275:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
 464              		.loc 1 275 1 view -0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 276:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   return SysTick_Config(TicksNumb);
 469              		.loc 1 276 3 view .LVU128
 470              	.LBB76:
 471              	.LBI76:
1950:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1951:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1952:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1953:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1954:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
ARM GAS  /tmp/ccEqltOE.s 			page 54


1955:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1956:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ##########################  MPU functions  #################################### */
1957:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1958:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1959:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1960:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #include "mpu_armv7.h"
1961:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1962:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
1963:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1964:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1965:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ##########################  FPU functions  #################################### */
1966:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1967:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1968:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
1969:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Function that provides FPU type.
1970:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1971:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1972:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1973:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1974:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   get FPU type
1975:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details returns the FPU type
1976:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \returns
1977:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****    - \b  0: No FPU
1978:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****    - \b  1: Single precision FPU
1979:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****    - \b  2: Double + Single precision FPU
1980:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1981:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
1982:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1983:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t mvfr0;
1984:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1985:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   mvfr0 = FPU->MVFR0;
1986:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
1987:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1988:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return 1U;           /* Single precision FPU */
1989:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1990:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   else
1991:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1992:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return 0U;           /* No FPU */
1993:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
1994:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1995:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1996:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1997:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of CMSIS_Core_FpuFunctions */
1998:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1999:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
2000:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
2001:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ##################################    SysTick function  ########################################
2002:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
2003:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
2004:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
2005:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Functions that configure the System.
2006:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
2007:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
2008:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
2009:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
2010:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
2011:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
ARM GAS  /tmp/ccEqltOE.s 			page 55


2012:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   System Tick Configuration
2013:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2014:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            Counter is in free running mode to generate periodic interrupts.
2015:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]  ticks  Number of ticks between two interrupts.
2016:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return          0  Function succeeded.
2017:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return          1  Function failed.
2018:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2019:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
2020:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            must contain a vendor-specific implementation of this function.
2021:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
2022:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 472              		.loc 2 2022 26 view .LVU129
 473              	.LBB77:
2023:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
2024:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 474              		.loc 2 2024 3 view .LVU130
 475              		.loc 2 2024 14 is_stmt 0 view .LVU131
 476 0000 0138     		subs	r0, r0, #1
 477              	.LVL22:
 478              		.loc 2 2024 6 view .LVU132
 479 0002 B0F1807F 		cmp	r0, #16777216
 480 0006 0BD2     		bcs	.L25
2025:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
2026:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     return (1UL);                                                   /* Reload value impossible */
2027:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
2028:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
2029:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 481              		.loc 2 2029 3 is_stmt 1 view .LVU133
 482              		.loc 2 2029 18 is_stmt 0 view .LVU134
 483 0008 4FF0E023 		mov	r3, #-536813568
 484              	.LBB78:
 485              	.LBB79:
1822:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 486              		.loc 2 1822 46 view .LVU135
 487 000c 054A     		ldr	r2, .L26
 488              	.LBE79:
 489              	.LBE78:
 490              		.loc 2 2029 18 view .LVU136
 491 000e 5861     		str	r0, [r3, #20]
2030:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 492              		.loc 2 2030 3 is_stmt 1 view .LVU137
 493              	.LVL23:
 494              	.LBB81:
 495              	.LBI78:
1814:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 496              		.loc 2 1814 22 view .LVU138
 497              	.LBB80:
1816:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 498              		.loc 2 1816 3 view .LVU139
1822:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 499              		.loc 2 1822 5 view .LVU140
1822:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 500              		.loc 2 1822 46 is_stmt 0 view .LVU141
 501 0010 F021     		movs	r1, #240
 502 0012 82F82310 		strb	r1, [r2, #35]
 503              	.LVL24:
1822:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
ARM GAS  /tmp/ccEqltOE.s 			page 56


 504              		.loc 2 1822 46 view .LVU142
 505              	.LBE80:
 506              	.LBE81:
2031:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 507              		.loc 2 2031 3 is_stmt 1 view .LVU143
 508              		.loc 2 2031 18 is_stmt 0 view .LVU144
 509 0016 0020     		movs	r0, #0
 510              	.LVL25:
2032:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 511              		.loc 2 2032 18 view .LVU145
 512 0018 0722     		movs	r2, #7
2031:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 513              		.loc 2 2031 18 view .LVU146
 514 001a 9861     		str	r0, [r3, #24]
 515              		.loc 2 2032 3 is_stmt 1 view .LVU147
 516              		.loc 2 2032 18 is_stmt 0 view .LVU148
 517 001c 1A61     		str	r2, [r3, #16]
2033:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
2034:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
2035:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   return (0UL);                                                     /* Function successful */
 518              		.loc 2 2035 3 is_stmt 1 view .LVU149
 519              		.loc 2 2035 10 is_stmt 0 view .LVU150
 520 001e 7047     		bx	lr
 521              	.L25:
2026:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 522              		.loc 2 2026 12 view .LVU151
 523 0020 0120     		movs	r0, #1
 524              	.LVL26:
2026:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 525              		.loc 2 2026 12 view .LVU152
 526              	.LBE77:
 527              	.LBE76:
 277:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 528              		.loc 1 277 1 view .LVU153
 529 0022 7047     		bx	lr
 530              	.L27:
 531              		.align	2
 532              	.L26:
 533 0024 00ED00E0 		.word	-536810240
 534              		.cfi_endproc
 535              	.LFE726:
 537              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 538              		.align	1
 539              		.global	HAL_NVIC_GetPriorityGrouping
 540              		.syntax unified
 541              		.thumb
 542              		.thumb_func
 544              	HAL_NVIC_GetPriorityGrouping:
 545              	.LFB727:
 278:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 279:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @}
 280:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 281:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 282:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions_Group2
 283:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *  @brief   Cortex control functions
 284:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *
 285:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** @verbatim
ARM GAS  /tmp/ccEqltOE.s 			page 57


 286:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   ==============================================================================
 287:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 288:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   ==============================================================================
 289:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     [..]
 290:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 291:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****       (NVIC, SYSTICK, MPU) functionalities.
 292:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 293:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 294:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** @endverbatim
 295:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @{
 296:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 297:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 298:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** #ifdef CORE_CM0PLUS
 299:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 300:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief  Get the priority of an interrupt.
 301:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param IRQn External interrupt number.
 302:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 303:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer
 304:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *          to the appropriate CMSIS device file (stm32wlxxxx.h))
 305:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval None
 306:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 307:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriority(IRQn_Type IRQn)
 308:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
 309:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Get priority for Cortex-M system or device specific interrupts */
 310:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   return NVIC_GetPriority(IRQn);
 311:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 312:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** #else
 313:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 314:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 315:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief  Get the priority grouping field from the NVIC Interrupt Controller.
 316:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 317:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 318:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 319:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
 546              		.loc 1 319 1 is_stmt 1 view -0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              		@ link register save eliminated.
 320:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 321:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 551              		.loc 1 321 3 view .LVU155
 552              	.LBB84:
 553              	.LBI84:
1672:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 554              		.loc 2 1672 26 view .LVU156
 555              	.LBB85:
1674:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
 556              		.loc 2 1674 3 view .LVU157
1674:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
 557              		.loc 2 1674 26 is_stmt 0 view .LVU158
 558 0000 024B     		ldr	r3, .L29
 559 0002 D868     		ldr	r0, [r3, #12]
 560              	.LBE85:
 561              	.LBE84:
 322:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 562              		.loc 1 322 1 view .LVU159
ARM GAS  /tmp/ccEqltOE.s 			page 58


 563 0004 C0F30220 		ubfx	r0, r0, #8, #3
 564 0008 7047     		bx	lr
 565              	.L30:
 566 000a 00BF     		.align	2
 567              	.L29:
 568 000c 00ED00E0 		.word	-536810240
 569              		.cfi_endproc
 570              	.LFE727:
 572              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 573              		.align	1
 574              		.global	HAL_NVIC_GetPriority
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 579              	HAL_NVIC_GetPriority:
 580              	.LVL27:
 581              	.LFB728:
 323:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 324:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 325:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief  Get the priority of an interrupt.
 326:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param IRQn External interrupt number.
 327:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 328:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer
 329:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *          to the appropriate CMSIS device file (stm32wlxxxx.h))
 330:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param PriorityGroup the priority grouping bits length.
 331:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         This parameter can be one of the following values:
 332:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bit for pre-emption priority,
 333:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *                                      4 bits for subpriority
 334:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bit for pre-emption priority,
 335:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *                                      3 bits for subpriority
 336:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority,
 337:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *                                      2 bits for subpriority
 338:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority,
 339:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *                                      1 bit for subpriority
 340:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority,
 341:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *                                      0 bit for subpriority
 342:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param pPreemptPriority Pointer on the Preemptive priority value (starting from 0).
 343:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param pSubPriority Pointer on the Subpriority value (starting from 0).
 344:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval None
 345:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 346:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint3
 347:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
 582              		.loc 1 347 1 is_stmt 1 view -0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 348:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Check the parameters */
 349:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 586              		.loc 1 349 3 view .LVU161
 350:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Get priority for Cortex-M system or device specific interrupts */
 351:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 587              		.loc 1 351 3 view .LVU162
 588              	.LBB90:
 589              	.LBI90:
1836:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 590              		.loc 2 1836 26 view .LVU163
 591              	.LBB91:
ARM GAS  /tmp/ccEqltOE.s 			page 59


1839:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 592              		.loc 2 1839 3 view .LVU164
 593              	.LBE91:
 594              	.LBE90:
 347:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Check the parameters */
 595              		.loc 1 347 1 is_stmt 0 view .LVU165
 596 0000 70B5     		push	{r4, r5, r6, lr}
 597              	.LCFI1:
 598              		.cfi_def_cfa_offset 16
 599              		.cfi_offset 4, -16
 600              		.cfi_offset 5, -12
 601              		.cfi_offset 6, -8
 602              		.cfi_offset 14, -4
 603              	.LBB95:
 604              	.LBB92:
1839:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 605              		.loc 2 1839 6 view .LVU166
 606 0002 0028     		cmp	r0, #0
 607              	.LVL28:
1841:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 608              		.loc 2 1841 5 is_stmt 1 view .LVU167
1841:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 609              		.loc 2 1841 31 is_stmt 0 view .LVU168
 610 0004 AEBF     		itee	ge
 611 0006 00F16040 		addge	r0, r0, #-536870912
1845:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 612              		.loc 2 1845 31 view .LVU169
 613 000a 134C     		ldrlt	r4, .L37
1845:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 614              		.loc 2 1845 50 view .LVU170
 615 000c 00F00F00 		andlt	r0, r0, #15
 616              	.LBE92:
 617              	.LBE95:
 618              	.LBB96:
 619              	.LBB97:
1890:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 620              		.loc 2 1890 12 view .LVU171
 621 0010 01F00701 		and	r1, r1, #7
 622              	.LVL29:
1890:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 623              		.loc 2 1890 12 view .LVU172
 624              	.LBE97:
 625              	.LBE96:
 626              	.LBB100:
 627              	.LBB93:
1841:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 628              		.loc 2 1841 31 view .LVU173
 629 0014 AABF     		itet	ge
 630 0016 00F56140 		addge	r0, r0, #57600
1845:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 631              		.loc 2 1845 31 view .LVU174
 632 001a 205C     		ldrblt	r0, [r4, r0]	@ zero_extendqisi2
1841:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 633              		.loc 2 1841 31 view .LVU175
 634 001c 90F80003 		ldrbge	r0, [r0, #768]	@ zero_extendqisi2
1845:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 635              		.loc 2 1845 5 is_stmt 1 view .LVU176
ARM GAS  /tmp/ccEqltOE.s 			page 60


 636              	.LBE93:
 637              	.LBE100:
 638              	.LBB101:
 639              	.LBB98:
1894:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 640              		.loc 2 1894 31 is_stmt 0 view .LVU177
 641 0020 C1F10704 		rsb	r4, r1, #7
1895:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 642              		.loc 2 1895 44 view .LVU178
 643 0024 0D1D     		adds	r5, r1, #4
1894:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 644              		.loc 2 1894 23 view .LVU179
 645 0026 042C     		cmp	r4, #4
 646 0028 28BF     		it	cs
 647 002a 0424     		movcs	r4, #4
1895:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 648              		.loc 2 1895 109 view .LVU180
 649 002c 062D     		cmp	r5, #6
 650              	.LBE98:
 651              	.LBE101:
 652              	.LBB102:
 653              	.LBB94:
1845:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 654              		.loc 2 1845 64 view .LVU181
 655 002e 4FEA1010 		lsr	r0, r0, #4
 656              	.LVL30:
1845:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 657              		.loc 2 1845 64 view .LVU182
 658              	.LBE94:
 659              	.LBE102:
 660              	.LBB103:
 661              	.LBI96:
1888:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 662              		.loc 2 1888 22 is_stmt 1 view .LVU183
 663              	.LBB99:
1890:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 664              		.loc 2 1890 3 view .LVU184
1891:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 665              		.loc 2 1891 3 view .LVU185
1892:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 666              		.loc 2 1892 3 view .LVU186
1894:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 667              		.loc 2 1894 3 view .LVU187
1895:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 668              		.loc 2 1895 3 view .LVU188
1895:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 669              		.loc 2 1895 109 is_stmt 0 view .LVU189
 670 0032 8CBF     		ite	hi
 671 0034 0339     		subhi	r1, r1, #3
 672              	.LVL31:
1895:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 673              		.loc 2 1895 109 view .LVU190
 674 0036 0021     		movls	r1, #0
 675              	.LVL32:
1897:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 676              		.loc 2 1897 3 is_stmt 1 view .LVU191
1897:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
ARM GAS  /tmp/ccEqltOE.s 			page 61


 677              		.loc 2 1897 53 is_stmt 0 view .LVU192
 678 0038 4FF0FF35 		mov	r5, #-1
 679              	.LVL33:
1897:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 680              		.loc 2 1897 33 view .LVU193
 681 003c 20FA01F6 		lsr	r6, r0, r1
1897:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 682              		.loc 2 1897 53 view .LVU194
 683 0040 05FA04F4 		lsl	r4, r5, r4
 684              	.LVL34:
1898:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
 685              		.loc 2 1898 53 view .LVU195
 686 0044 05FA01F1 		lsl	r1, r5, r1
 687              	.LVL35:
1897:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 688              		.loc 2 1897 53 view .LVU196
 689 0048 26EA0404 		bic	r4, r6, r4
1898:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
 690              		.loc 2 1898 53 view .LVU197
 691 004c 20EA0100 		bic	r0, r0, r1
 692              	.LVL36:
1897:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 693              		.loc 2 1897 21 view .LVU198
 694 0050 1460     		str	r4, [r2]
1898:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
 695              		.loc 2 1898 3 is_stmt 1 view .LVU199
1898:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
 696              		.loc 2 1898 21 is_stmt 0 view .LVU200
 697 0052 1860     		str	r0, [r3]
 698              	.LVL37:
1898:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
 699              		.loc 2 1898 21 view .LVU201
 700              	.LBE99:
 701              	.LBE103:
 352:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 702              		.loc 1 352 1 view .LVU202
 703 0054 70BD     		pop	{r4, r5, r6, pc}
 704              	.L38:
 705 0056 00BF     		.align	2
 706              	.L37:
 707 0058 14ED00E0 		.word	-536810220
 708              		.cfi_endproc
 709              	.LFE728:
 711              		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 712              		.align	1
 713              		.global	HAL_NVIC_GetActive
 714              		.syntax unified
 715              		.thumb
 716              		.thumb_func
 718              	HAL_NVIC_GetActive:
 719              	.LVL38:
 720              	.LFB729:
 353:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 354:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 355:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief Get active interrupt (read the active register in NVIC and return the active bit).
 356:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param IRQn External interrupt number
 357:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
ARM GAS  /tmp/ccEqltOE.s 			page 62


 358:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer
 359:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *          to the appropriate CMSIS device file (stm32wlxxxx.h))
 360:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 361:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 362:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 363:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 364:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
 721              		.loc 1 364 1 is_stmt 1 view -0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725              		@ link register save eliminated.
 365:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Return 1 if active else 0 */
 366:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 726              		.loc 1 366 3 view .LVU204
 727              	.LBB106:
 728              	.LBI106:
1792:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 729              		.loc 2 1792 26 view .LVU205
 730              	.LBB107:
1794:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 731              		.loc 2 1794 3 view .LVU206
1794:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 732              		.loc 2 1794 6 is_stmt 0 view .LVU207
 733 0000 0028     		cmp	r0, #0
 734              	.LVL39:
1796:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 735              		.loc 2 1796 5 is_stmt 1 view .LVU208
1796:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 736              		.loc 2 1796 54 is_stmt 0 view .LVU209
 737 0002 A1BF     		itttt	ge
 738 0004 4309     		lsrge	r3, r0, #5
1796:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 739              		.loc 2 1796 35 view .LVU210
 740 0006 8033     		addge	r3, r3, #128
 741 0008 054A     		ldrge	r2, .L42
 742 000a 52F82330 		ldrge	r3, [r2, r3, lsl #2]
1796:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 743              		.loc 2 1796 91 view .LVU211
 744 000e A3BF     		ittte	ge
 745 0010 00F01F00 		andge	r0, r0, #31
1796:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 746              		.loc 2 1796 103 view .LVU212
 747 0014 23FA00F0 		lsrge	r0, r3, r0
1796:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 748              		.loc 2 1796 12 view .LVU213
 749 0018 00F00100 		andge	r0, r0, #1
1800:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 750              		.loc 2 1800 11 view .LVU214
 751 001c 0020     		movlt	r0, #0
 752              	.LVL40:
1800:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 753              		.loc 2 1800 11 view .LVU215
 754              	.LBE107:
 755              	.LBE106:
 367:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 756              		.loc 1 367 1 view .LVU216
ARM GAS  /tmp/ccEqltOE.s 			page 63


 757 001e 7047     		bx	lr
 758              	.L43:
 759              		.align	2
 760              	.L42:
 761 0020 00E100E0 		.word	-536813312
 762              		.cfi_endproc
 763              	.LFE729:
 765              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 766              		.align	1
 767              		.global	HAL_NVIC_SetPendingIRQ
 768              		.syntax unified
 769              		.thumb
 770              		.thumb_func
 772              	HAL_NVIC_SetPendingIRQ:
 773              	.LVL41:
 774              	.LFB730:
 368:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 369:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** #endif /* CORE_CM0PLUS */
 370:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 371:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 372:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief  Set Pending bit of an external interrupt.
 373:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param  IRQn External interrupt number
 374:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 375:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer
 376:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *          to the appropriate CMSIS device file (stm32wlxxxx.h))
 377:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval None
 378:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 379:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 380:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
 775              		.loc 1 380 1 is_stmt 1 view -0
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 0
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 779              		@ link register save eliminated.
 381:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Check the parameters */
 382:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 780              		.loc 1 382 3 view .LVU218
 383:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 384:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Set interrupt pending */
 385:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 781              		.loc 1 385 3 view .LVU219
 782              	.LBB110:
 783              	.LBI110:
1760:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 784              		.loc 2 1760 22 view .LVU220
 785              	.LBB111:
1762:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 786              		.loc 2 1762 3 view .LVU221
1762:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 787              		.loc 2 1762 6 is_stmt 0 view .LVU222
 788 0000 0028     		cmp	r0, #0
 789              	.LVL42:
1762:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 790              		.loc 2 1762 6 view .LVU223
 791 0002 09DB     		blt	.L44
1764:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 792              		.loc 2 1764 5 is_stmt 1 view .LVU224
ARM GAS  /tmp/ccEqltOE.s 			page 64


1764:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 793              		.loc 2 1764 34 is_stmt 0 view .LVU225
 794 0004 4309     		lsrs	r3, r0, #5
1764:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 795              		.loc 2 1764 45 view .LVU226
 796 0006 0122     		movs	r2, #1
1764:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 797              		.loc 2 1764 81 view .LVU227
 798 0008 00F01F00 		and	r0, r0, #31
1764:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 799              		.loc 2 1764 45 view .LVU228
 800 000c 02FA00F0 		lsl	r0, r2, r0
1764:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 801              		.loc 2 1764 43 view .LVU229
 802 0010 4033     		adds	r3, r3, #64
 803 0012 024A     		ldr	r2, .L46
 804 0014 42F82300 		str	r0, [r2, r3, lsl #2]
 805              	.LVL43:
 806              	.L44:
1764:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 807              		.loc 2 1764 43 view .LVU230
 808              	.LBE111:
 809              	.LBE110:
 386:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 810              		.loc 1 386 1 view .LVU231
 811 0018 7047     		bx	lr
 812              	.L47:
 813 001a 00BF     		.align	2
 814              	.L46:
 815 001c 00E100E0 		.word	-536813312
 816              		.cfi_endproc
 817              	.LFE730:
 819              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 820              		.align	1
 821              		.global	HAL_NVIC_GetPendingIRQ
 822              		.syntax unified
 823              		.thumb
 824              		.thumb_func
 826              	HAL_NVIC_GetPendingIRQ:
 827              	.LVL44:
 828              	.LFB731:
 387:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 388:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 389:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief  Get Pending Interrupt (read the pending register in the NVIC
 390:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         and return the pending bit for the specified interrupt).
 391:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 392:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 393:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer
 394:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *          to the appropriate CMSIS device file (stm32wlxxxx.h))
 395:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 396:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 397:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 398:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 399:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
 829              		.loc 1 399 1 is_stmt 1 view -0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccEqltOE.s 			page 65


 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833              		@ link register save eliminated.
 400:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Check the parameters */
 401:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 834              		.loc 1 401 3 view .LVU233
 402:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 403:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 404:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 835              		.loc 1 404 3 view .LVU234
 836              	.LBB114:
 837              	.LBI114:
1741:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 838              		.loc 2 1741 26 view .LVU235
 839              	.LBB115:
1743:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 840              		.loc 2 1743 3 view .LVU236
1743:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 841              		.loc 2 1743 6 is_stmt 0 view .LVU237
 842 0000 0028     		cmp	r0, #0
 843              	.LVL45:
1745:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 844              		.loc 2 1745 5 is_stmt 1 view .LVU238
1745:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 845              		.loc 2 1745 54 is_stmt 0 view .LVU239
 846 0002 A1BF     		itttt	ge
 847 0004 4309     		lsrge	r3, r0, #5
1745:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 848              		.loc 2 1745 35 view .LVU240
 849 0006 4033     		addge	r3, r3, #64
 850 0008 054A     		ldrge	r2, .L51
 851 000a 52F82330 		ldrge	r3, [r2, r3, lsl #2]
1745:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 852              		.loc 2 1745 91 view .LVU241
 853 000e A3BF     		ittte	ge
 854 0010 00F01F00 		andge	r0, r0, #31
1745:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 855              		.loc 2 1745 103 view .LVU242
 856 0014 23FA00F0 		lsrge	r0, r3, r0
1745:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 857              		.loc 2 1745 12 view .LVU243
 858 0018 00F00100 		andge	r0, r0, #1
1749:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 859              		.loc 2 1749 11 view .LVU244
 860 001c 0020     		movlt	r0, #0
 861              	.LVL46:
1749:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 862              		.loc 2 1749 11 view .LVU245
 863              	.LBE115:
 864              	.LBE114:
 405:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 865              		.loc 1 405 1 view .LVU246
 866 001e 7047     		bx	lr
 867              	.L52:
 868              		.align	2
 869              	.L51:
 870 0020 00E100E0 		.word	-536813312
 871              		.cfi_endproc
ARM GAS  /tmp/ccEqltOE.s 			page 66


 872              	.LFE731:
 874              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 875              		.align	1
 876              		.global	HAL_NVIC_ClearPendingIRQ
 877              		.syntax unified
 878              		.thumb
 879              		.thumb_func
 881              	HAL_NVIC_ClearPendingIRQ:
 882              	.LVL47:
 883              	.LFB732:
 406:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 407:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 408:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief  Clear the pending bit of an external interrupt.
 409:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 410:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 411:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer
 412:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *          to the appropriate CMSIS device file (stm32wlxxxx.h))
 413:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval None
 414:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 415:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 416:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
 884              		.loc 1 416 1 is_stmt 1 view -0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888              		@ link register save eliminated.
 417:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Check the parameters */
 418:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 889              		.loc 1 418 3 view .LVU248
 419:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 420:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Clear pending interrupt */
 421:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 890              		.loc 1 421 3 view .LVU249
 891              	.LBB118:
 892              	.LBI118:
1775:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 893              		.loc 2 1775 22 view .LVU250
 894              	.LBB119:
1777:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 895              		.loc 2 1777 3 view .LVU251
1777:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 896              		.loc 2 1777 6 is_stmt 0 view .LVU252
 897 0000 0028     		cmp	r0, #0
 898              	.LVL48:
1777:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 899              		.loc 2 1777 6 view .LVU253
 900 0002 09DB     		blt	.L53
1779:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 901              		.loc 2 1779 5 is_stmt 1 view .LVU254
1779:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 902              		.loc 2 1779 34 is_stmt 0 view .LVU255
 903 0004 4309     		lsrs	r3, r0, #5
1779:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 904              		.loc 2 1779 45 view .LVU256
 905 0006 0122     		movs	r2, #1
1779:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 906              		.loc 2 1779 81 view .LVU257
ARM GAS  /tmp/ccEqltOE.s 			page 67


 907 0008 00F01F00 		and	r0, r0, #31
1779:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 908              		.loc 2 1779 45 view .LVU258
 909 000c 02FA00F0 		lsl	r0, r2, r0
1779:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 910              		.loc 2 1779 43 view .LVU259
 911 0010 6033     		adds	r3, r3, #96
 912 0012 024A     		ldr	r2, .L55
 913 0014 42F82300 		str	r0, [r2, r3, lsl #2]
 914              	.LVL49:
 915              	.L53:
1779:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }
 916              		.loc 2 1779 43 view .LVU260
 917              	.LBE119:
 918              	.LBE118:
 422:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 919              		.loc 1 422 1 view .LVU261
 920 0018 7047     		bx	lr
 921              	.L56:
 922 001a 00BF     		.align	2
 923              	.L55:
 924 001c 00E100E0 		.word	-536813312
 925              		.cfi_endproc
 926              	.LFE732:
 928              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 929              		.align	1
 930              		.global	HAL_SYSTICK_CLKSourceConfig
 931              		.syntax unified
 932              		.thumb
 933              		.thumb_func
 935              	HAL_SYSTICK_CLKSourceConfig:
 936              	.LVL50:
 937              	.LFB733:
 423:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 424:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 425:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief  Configure the SysTick clock source.
 426:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param CLKSource specifies the SysTick clock source.
 427:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *         This parameter can be one of the following values:
 428:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 429:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 430:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval None
 431:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 432:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 433:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
 938              		.loc 1 433 1 is_stmt 1 view -0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 0
 941              		@ frame_needed = 0, uses_anonymous_args = 0
 942              		@ link register save eliminated.
 434:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Check the parameters */
 435:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 943              		.loc 1 435 3 view .LVU263
 436:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 944              		.loc 1 436 3 view .LVU264
 945 0000 4FF0E023 		mov	r3, #-536813568
 946              		.loc 1 436 6 is_stmt 0 view .LVU265
 947 0004 0428     		cmp	r0, #4
ARM GAS  /tmp/ccEqltOE.s 			page 68


 437:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   {
 438:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 948              		.loc 1 438 19 view .LVU266
 949 0006 1A69     		ldr	r2, [r3, #16]
 950              		.loc 1 438 5 is_stmt 1 view .LVU267
 951              		.loc 1 438 19 is_stmt 0 view .LVU268
 952 0008 0CBF     		ite	eq
 953 000a 42F00402 		orreq	r2, r2, #4
 439:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   }
 440:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   else
 441:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   {
 442:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 954              		.loc 1 442 5 is_stmt 1 view .LVU269
 955              		.loc 1 442 19 is_stmt 0 view .LVU270
 956 000e 22F00402 		bicne	r2, r2, #4
 957 0012 1A61     		str	r2, [r3, #16]
 443:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   }
 444:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 958              		.loc 1 444 1 view .LVU271
 959 0014 7047     		bx	lr
 960              		.cfi_endproc
 961              	.LFE733:
 963              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 964              		.align	1
 965              		.weak	HAL_SYSTICK_Callback
 966              		.syntax unified
 967              		.thumb
 968              		.thumb_func
 970              	HAL_SYSTICK_Callback:
 971              	.LFB735:
 445:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 446:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 447:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief  Handle SYSTICK interrupt request.
 448:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval None
 449:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 450:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 451:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
 452:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 453:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 454:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 455:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 456:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief  SYSTICK callback.
 457:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval None
 458:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 459:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 460:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
 972              		.loc 1 460 1 is_stmt 1 view -0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 0
 975              		@ frame_needed = 0, uses_anonymous_args = 0
 976              		@ link register save eliminated.
 461:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 462:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
 463:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****    */
 464:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 977              		.loc 1 464 1 view .LVU273
 978 0000 7047     		bx	lr
ARM GAS  /tmp/ccEqltOE.s 			page 69


 979              		.cfi_endproc
 980              	.LFE735:
 982              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 983              		.align	1
 984              		.global	HAL_SYSTICK_IRQHandler
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 989              	HAL_SYSTICK_IRQHandler:
 990              	.LFB734:
 451:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 991              		.loc 1 451 1 view -0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 452:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 995              		.loc 1 452 3 view .LVU275
 451:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 996              		.loc 1 451 1 is_stmt 0 view .LVU276
 997 0000 08B5     		push	{r3, lr}
 998              	.LCFI2:
 999              		.cfi_def_cfa_offset 8
 1000              		.cfi_offset 3, -8
 1001              		.cfi_offset 14, -4
 452:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 1002              		.loc 1 452 3 view .LVU277
 1003 0002 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 1004              	.LVL51:
 453:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 1005              		.loc 1 453 1 view .LVU278
 1006 0006 08BD     		pop	{r3, pc}
 1007              		.cfi_endproc
 1008              	.LFE734:
 1010              		.section	.text.HAL_MPU_Enable,"ax",%progbits
 1011              		.align	1
 1012              		.global	HAL_MPU_Enable
 1013              		.syntax unified
 1014              		.thumb
 1015              		.thumb_func
 1017              	HAL_MPU_Enable:
 1018              	.LVL52:
 1019              	.LFB736:
 465:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 466:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** #if (__MPU_PRESENT == 1U)
 467:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 468:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 469:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief  Enable the MPU.
 470:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param  MPU_Control: Specifies the control mode of the MPU during hard fault,
 471:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *          NMI, FAULTMASK and privileged access to the default memory
 472:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *          This parameter can be one of the following values:
 473:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF_NONE
 474:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *            @arg MPU_HARDFAULT_NMI
 475:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *            @arg MPU_PRIVILEGED_DEFAULT
 476:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF
 477:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval None
 478:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 479:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** void HAL_MPU_Enable(uint32_t MPU_Control)
ARM GAS  /tmp/ccEqltOE.s 			page 70


 480:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
 1020              		.loc 1 480 1 is_stmt 1 view -0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 0
 1023              		@ frame_needed = 0, uses_anonymous_args = 0
 1024              		@ link register save eliminated.
 481:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Enable the MPU */
 482:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   MPU->CTRL = (MPU_Control | MPU_CTRL_ENABLE_Msk);
 1025              		.loc 1 482 3 view .LVU280
 1026              		.loc 1 482 13 is_stmt 0 view .LVU281
 1027 0000 044B     		ldr	r3, .L64
 1028              		.loc 1 482 28 view .LVU282
 1029 0002 40F00100 		orr	r0, r0, #1
 1030              	.LVL53:
 1031              		.loc 1 482 13 view .LVU283
 1032 0006 C3F89400 		str	r0, [r3, #148]
 483:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 484:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Ensure MPU setting take effects */
 485:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   __DSB();
 1033              		.loc 1 485 3 is_stmt 1 view .LVU284
 1034              	.LBB120:
 1035              	.LBI120:
 269:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 1036              		.loc 3 269 27 view .LVU285
 1037              	.LBB121:
 1038              		.loc 3 271 3 view .LVU286
 1039              		.syntax unified
 1040              	@ 271 "hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 1041 000a BFF34F8F 		dsb 0xF
 1042              	@ 0 "" 2
 1043              		.thumb
 1044              		.syntax unified
 1045              	.LBE121:
 1046              	.LBE120:
 486:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   __ISB();
 1047              		.loc 1 486 3 view .LVU287
 1048              	.LBB122:
 1049              	.LBI122:
 258:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 1050              		.loc 3 258 27 view .LVU288
 1051              	.LBB123:
 260:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 1052              		.loc 3 260 3 view .LVU289
 1053              		.syntax unified
 1054              	@ 260 "hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 1055 000e BFF36F8F 		isb 0xF
 1056              	@ 0 "" 2
 1057              		.thumb
 1058              		.syntax unified
 1059              	.LBE123:
 1060              	.LBE122:
 487:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 1061              		.loc 1 487 1 is_stmt 0 view .LVU290
 1062 0012 7047     		bx	lr
 1063              	.L65:
 1064              		.align	2
 1065              	.L64:
ARM GAS  /tmp/ccEqltOE.s 			page 71


 1066 0014 00ED00E0 		.word	-536810240
 1067              		.cfi_endproc
 1068              	.LFE736:
 1070              		.section	.text.HAL_MPU_Disable,"ax",%progbits
 1071              		.align	1
 1072              		.global	HAL_MPU_Disable
 1073              		.syntax unified
 1074              		.thumb
 1075              		.thumb_func
 1077              	HAL_MPU_Disable:
 1078              	.LFB737:
 488:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 489:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 490:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 491:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief  Disable the MPU.
 492:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval None
 493:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 494:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** void HAL_MPU_Disable(void)
 495:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
 1079              		.loc 1 495 1 is_stmt 1 view -0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 1083              		@ link register save eliminated.
 496:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Make sure outstanding transfers are done */
 497:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   __DMB();
 1084              		.loc 1 497 3 view .LVU292
 1085              	.LBB124:
 1086              	.LBI124:
 272:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** }
 273:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 274:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** 
 275:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** /**
 276:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****  */
 280:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 1087              		.loc 3 280 27 view .LVU293
 1088              	.LBB125:
 281:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h **** {
 282:hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 1089              		.loc 3 282 3 view .LVU294
 1090              		.syntax unified
 1091              	@ 282 "hardware/mcu/st/CMSIS_5/CMSIS/Core/Include/cmsis_gcc.h" 1
 1092 0000 BFF35F8F 		dmb 0xF
 1093              	@ 0 "" 2
 1094              		.thumb
 1095              		.syntax unified
 1096              	.LBE125:
 1097              	.LBE124:
 498:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 499:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Disable the MPU and clear the control register*/
 500:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   MPU->CTRL  = 0;
 1098              		.loc 1 500 3 view .LVU295
 1099              		.loc 1 500 14 is_stmt 0 view .LVU296
 1100 0004 024B     		ldr	r3, .L67
ARM GAS  /tmp/ccEqltOE.s 			page 72


 1101 0006 0022     		movs	r2, #0
 1102 0008 C3F89420 		str	r2, [r3, #148]
 501:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 1103              		.loc 1 501 1 view .LVU297
 1104 000c 7047     		bx	lr
 1105              	.L68:
 1106 000e 00BF     		.align	2
 1107              	.L67:
 1108 0010 00ED00E0 		.word	-536810240
 1109              		.cfi_endproc
 1110              	.LFE737:
 1112              		.section	.text.HAL_MPU_ConfigRegion,"ax",%progbits
 1113              		.align	1
 1114              		.global	HAL_MPU_ConfigRegion
 1115              		.syntax unified
 1116              		.thumb
 1117              		.thumb_func
 1119              	HAL_MPU_ConfigRegion:
 1120              	.LVL54:
 1121              	.LFB738:
 502:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 503:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 504:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** /**
 505:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @brief  Initialize and configure the Region and the memory to be protected.
 506:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @param MPU_Init Pointer to a MPU_Region_InitTypeDef structure that contains
 507:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   *                the initialization and configuration information.
 508:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   * @retval None
 509:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   */
 510:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
 511:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** {
 1122              		.loc 1 511 1 is_stmt 1 view -0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 0
 1125              		@ frame_needed = 0, uses_anonymous_args = 0
 512:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Check the parameters */
 513:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 1126              		.loc 1 513 3 view .LVU299
 514:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 1127              		.loc 1 514 3 view .LVU300
 515:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 516:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Set the Region number */
 517:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 1128              		.loc 1 517 3 view .LVU301
 1129              		.loc 1 517 12 is_stmt 0 view .LVU302
 1130 0000 144A     		ldr	r2, .L72
 1131              		.loc 1 517 22 view .LVU303
 1132 0002 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 511:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   /* Check the parameters */
 1133              		.loc 1 511 1 view .LVU304
 1134 0004 10B5     		push	{r4, lr}
 1135              	.LCFI3:
 1136              		.cfi_def_cfa_offset 8
 1137              		.cfi_offset 4, -8
 1138              		.cfi_offset 14, -4
 1139              		.loc 1 517 12 view .LVU305
 1140 0006 C2F89830 		str	r3, [r2, #152]
 518:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
ARM GAS  /tmp/ccEqltOE.s 			page 73


 519:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   if ((MPU_Init->Enable) != 0U)
 1141              		.loc 1 519 3 is_stmt 1 view .LVU306
 1142              		.loc 1 519 16 is_stmt 0 view .LVU307
 1143 000a 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 1144              		.loc 1 519 6 view .LVU308
 1145 000c E9B1     		cbz	r1, .L70
 520:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   {
 521:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     /* Check the parameters */
 522:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 1146              		.loc 1 522 5 is_stmt 1 view .LVU309
 523:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 1147              		.loc 1 523 5 view .LVU310
 524:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 1148              		.loc 1 524 5 view .LVU311
 525:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 1149              		.loc 1 525 5 view .LVU312
 526:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 1150              		.loc 1 526 5 view .LVU313
 527:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 1151              		.loc 1 527 5 view .LVU314
 528:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 1152              		.loc 1 528 5 view .LVU315
 529:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 1153              		.loc 1 529 5 view .LVU316
 530:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** 
 531:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     MPU->RBAR = MPU_Init->BaseAddress;
 1154              		.loc 1 531 5 view .LVU317
 1155              		.loc 1 531 25 is_stmt 0 view .LVU318
 1156 000e 4368     		ldr	r3, [r0, #4]
 1157              		.loc 1 531 15 view .LVU319
 1158 0010 C2F89C30 		str	r3, [r2, #156]
 532:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec        << MPU_RASR_XN_Pos)   |
 1159              		.loc 1 532 5 is_stmt 1 view .LVU320
 533:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 1160              		.loc 1 533 18 is_stmt 0 view .LVU321
 1161 0014 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 532:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec        << MPU_RASR_XN_Pos)   |
 1162              		.loc 1 532 18 view .LVU322
 1163 0016 047B     		ldrb	r4, [r0, #12]	@ zero_extendqisi2
 1164              		.loc 1 533 57 view .LVU323
 1165 0018 1B06     		lsls	r3, r3, #24
 532:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec        << MPU_RASR_XN_Pos)   |
 1166              		.loc 1 532 79 view .LVU324
 1167 001a 43EA0473 		orr	r3, r3, r4, lsl #28
 534:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField       << MPU_RASR_TEX_Pos)  |
 535:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable        << MPU_RASR_S_Pos)    |
 536:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable        << MPU_RASR_C_Pos)    |
 537:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable       << MPU_RASR_B_Pos)    |
 538:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable   << MPU_RASR_SRD_Pos)  |
 539:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size               << MPU_RASR_SIZE_Pos) |
 1168              		.loc 1 539 79 view .LVU325
 1169 001e 0B43     		orrs	r3, r3, r1
 534:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField       << MPU_RASR_TEX_Pos)  |
 1170              		.loc 1 534 18 view .LVU326
 1171 0020 817A     		ldrb	r1, [r0, #10]	@ zero_extendqisi2
 1172              		.loc 1 539 79 view .LVU327
 1173 0022 43EAC143 		orr	r3, r3, r1, lsl #19
ARM GAS  /tmp/ccEqltOE.s 			page 74


 535:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable        << MPU_RASR_C_Pos)    |
 1174              		.loc 1 535 18 view .LVU328
 1175 0026 417B     		ldrb	r1, [r0, #13]	@ zero_extendqisi2
 1176              		.loc 1 539 79 view .LVU329
 1177 0028 43EA8143 		orr	r3, r3, r1, lsl #18
 536:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable       << MPU_RASR_B_Pos)    |
 1178              		.loc 1 536 18 view .LVU330
 1179 002c 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 1180              		.loc 1 539 79 view .LVU331
 1181 002e 43EA4143 		orr	r3, r3, r1, lsl #17
 537:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable   << MPU_RASR_SRD_Pos)  |
 1182              		.loc 1 537 18 view .LVU332
 1183 0032 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 1184              		.loc 1 539 79 view .LVU333
 1185 0034 43EA0143 		orr	r3, r3, r1, lsl #16
 538:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size               << MPU_RASR_SIZE_Pos) |
 1186              		.loc 1 538 18 view .LVU334
 1187 0038 417A     		ldrb	r1, [r0, #9]	@ zero_extendqisi2
 1188              		.loc 1 539 79 view .LVU335
 1189 003a 43EA0123 		orr	r3, r3, r1, lsl #8
 1190              		.loc 1 539 18 view .LVU336
 1191 003e 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 1192              		.loc 1 539 79 view .LVU337
 1193 0040 43EA4103 		orr	r3, r3, r1, lsl #1
 532:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 1194              		.loc 1 532 15 view .LVU338
 1195 0044 C2F8A030 		str	r3, [r2, #160]
 1196              	.L69:
 540:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable             << MPU_RASR_ENABLE_Pos);
 541:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   }
 542:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   else
 543:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   {
 544:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     MPU->RBAR = 0x00U;
 545:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     MPU->RASR = 0x00U;
 546:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   }
 547:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c **** }
 1197              		.loc 1 547 1 view .LVU339
 1198 0048 10BD     		pop	{r4, pc}
 1199              	.L70:
 544:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     MPU->RASR = 0x00U;
 1200              		.loc 1 544 5 is_stmt 1 view .LVU340
 544:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****     MPU->RASR = 0x00U;
 1201              		.loc 1 544 15 is_stmt 0 view .LVU341
 1202 004a C2F89C10 		str	r1, [r2, #156]
 545:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   }
 1203              		.loc 1 545 5 is_stmt 1 view .LVU342
 545:hardware/mcu/st/stm32wlxx_hal_driver/Src/stm32wlxx_hal_cortex.c ****   }
 1204              		.loc 1 545 15 is_stmt 0 view .LVU343
 1205 004e C2F8A010 		str	r1, [r2, #160]
 1206              		.loc 1 547 1 view .LVU344
 1207 0052 F9E7     		b	.L69
 1208              	.L73:
 1209              		.align	2
 1210              	.L72:
 1211 0054 00ED00E0 		.word	-536810240
 1212              		.cfi_endproc
 1213              	.LFE738:
ARM GAS  /tmp/ccEqltOE.s 			page 75


 1215              		.text
 1216              	.Letext0:
 1217              		.file 4 "hardware/mcu/st/cmsis_device_wl/Include/stm32wle5xx.h"
 1218              		.file 5 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 1219              		.file 6 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 1220              		.file 7 "hardware/mcu/st/stm32wlxx_hal_driver/Inc/stm32wlxx_hal_cortex.h"
 1221              		.file 8 "hardware/mcu/st/stm32wlxx_hal_driver/Inc/stm32wlxx_ll_dma.h"
ARM GAS  /tmp/ccEqltOE.s 			page 76


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32wlxx_hal_cortex.c
     /tmp/ccEqltOE.s:18     .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 $t
     /tmp/ccEqltOE.s:24     .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 HAL_NVIC_SetPriorityGrouping
     /tmp/ccEqltOE.s:78     .text.HAL_NVIC_SetPriorityGrouping:0000000000000020 $d
     /tmp/ccEqltOE.s:83     .text.HAL_NVIC_SetPriority:0000000000000000 $t
     /tmp/ccEqltOE.s:89     .text.HAL_NVIC_SetPriority:0000000000000000 HAL_NVIC_SetPriority
     /tmp/ccEqltOE.s:229    .text.HAL_NVIC_SetPriority:000000000000005c $d
     /tmp/ccEqltOE.s:235    .text.HAL_NVIC_EnableIRQ:0000000000000000 $t
     /tmp/ccEqltOE.s:241    .text.HAL_NVIC_EnableIRQ:0000000000000000 HAL_NVIC_EnableIRQ
     /tmp/ccEqltOE.s:285    .text.HAL_NVIC_EnableIRQ:0000000000000018 $d
     /tmp/ccEqltOE.s:290    .text.HAL_NVIC_DisableIRQ:0000000000000000 $t
     /tmp/ccEqltOE.s:296    .text.HAL_NVIC_DisableIRQ:0000000000000000 HAL_NVIC_DisableIRQ
     /tmp/ccEqltOE.s:368    .text.HAL_NVIC_DisableIRQ:0000000000000024 $d
     /tmp/ccEqltOE.s:373    .text.HAL_NVIC_SystemReset:0000000000000000 $t
     /tmp/ccEqltOE.s:379    .text.HAL_NVIC_SystemReset:0000000000000000 HAL_NVIC_SystemReset
     /tmp/ccEqltOE.s:447    .text.HAL_NVIC_SystemReset:000000000000001c $d
     /tmp/ccEqltOE.s:455    .text.HAL_SYSTICK_Config:0000000000000000 $t
     /tmp/ccEqltOE.s:461    .text.HAL_SYSTICK_Config:0000000000000000 HAL_SYSTICK_Config
     /tmp/ccEqltOE.s:533    .text.HAL_SYSTICK_Config:0000000000000024 $d
     /tmp/ccEqltOE.s:538    .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 $t
     /tmp/ccEqltOE.s:544    .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 HAL_NVIC_GetPriorityGrouping
     /tmp/ccEqltOE.s:568    .text.HAL_NVIC_GetPriorityGrouping:000000000000000c $d
     /tmp/ccEqltOE.s:573    .text.HAL_NVIC_GetPriority:0000000000000000 $t
     /tmp/ccEqltOE.s:579    .text.HAL_NVIC_GetPriority:0000000000000000 HAL_NVIC_GetPriority
     /tmp/ccEqltOE.s:707    .text.HAL_NVIC_GetPriority:0000000000000058 $d
     /tmp/ccEqltOE.s:712    .text.HAL_NVIC_GetActive:0000000000000000 $t
     /tmp/ccEqltOE.s:718    .text.HAL_NVIC_GetActive:0000000000000000 HAL_NVIC_GetActive
     /tmp/ccEqltOE.s:761    .text.HAL_NVIC_GetActive:0000000000000020 $d
     /tmp/ccEqltOE.s:766    .text.HAL_NVIC_SetPendingIRQ:0000000000000000 $t
     /tmp/ccEqltOE.s:772    .text.HAL_NVIC_SetPendingIRQ:0000000000000000 HAL_NVIC_SetPendingIRQ
     /tmp/ccEqltOE.s:815    .text.HAL_NVIC_SetPendingIRQ:000000000000001c $d
     /tmp/ccEqltOE.s:820    .text.HAL_NVIC_GetPendingIRQ:0000000000000000 $t
     /tmp/ccEqltOE.s:826    .text.HAL_NVIC_GetPendingIRQ:0000000000000000 HAL_NVIC_GetPendingIRQ
     /tmp/ccEqltOE.s:870    .text.HAL_NVIC_GetPendingIRQ:0000000000000020 $d
     /tmp/ccEqltOE.s:875    .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 $t
     /tmp/ccEqltOE.s:881    .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 HAL_NVIC_ClearPendingIRQ
     /tmp/ccEqltOE.s:924    .text.HAL_NVIC_ClearPendingIRQ:000000000000001c $d
     /tmp/ccEqltOE.s:929    .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 $t
     /tmp/ccEqltOE.s:935    .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 HAL_SYSTICK_CLKSourceConfig
     /tmp/ccEqltOE.s:964    .text.HAL_SYSTICK_Callback:0000000000000000 $t
     /tmp/ccEqltOE.s:970    .text.HAL_SYSTICK_Callback:0000000000000000 HAL_SYSTICK_Callback
     /tmp/ccEqltOE.s:983    .text.HAL_SYSTICK_IRQHandler:0000000000000000 $t
     /tmp/ccEqltOE.s:989    .text.HAL_SYSTICK_IRQHandler:0000000000000000 HAL_SYSTICK_IRQHandler
     /tmp/ccEqltOE.s:1011   .text.HAL_MPU_Enable:0000000000000000 $t
     /tmp/ccEqltOE.s:1017   .text.HAL_MPU_Enable:0000000000000000 HAL_MPU_Enable
     /tmp/ccEqltOE.s:1066   .text.HAL_MPU_Enable:0000000000000014 $d
     /tmp/ccEqltOE.s:1071   .text.HAL_MPU_Disable:0000000000000000 $t
     /tmp/ccEqltOE.s:1077   .text.HAL_MPU_Disable:0000000000000000 HAL_MPU_Disable
     /tmp/ccEqltOE.s:1108   .text.HAL_MPU_Disable:0000000000000010 $d
     /tmp/ccEqltOE.s:1113   .text.HAL_MPU_ConfigRegion:0000000000000000 $t
     /tmp/ccEqltOE.s:1119   .text.HAL_MPU_ConfigRegion:0000000000000000 HAL_MPU_ConfigRegion
     /tmp/ccEqltOE.s:1211   .text.HAL_MPU_ConfigRegion:0000000000000054 $d

NO UNDEFINED SYMBOLS
